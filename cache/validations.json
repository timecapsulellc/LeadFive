{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)224_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)288_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:IPriceFeed": {
        "src": "contracts/OrphiCrowdFund.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:OrphiCrowdFund": {
        "src": "contracts/OrphiCrowdFund.sol:15",
        "version": {
          "withMetadata": "cf6a7b02b74ef081b795e322c254463dafdabaee640907ff6414b97bccd5c148",
          "withoutMetadata": "9e83d5132a1477dc16e2d93108cd9e058f6e0a5eaad1413604d3e24ca98283c6",
          "linkedWithoutMetadata": "9e83d5132a1477dc16e2d93108cd9e058f6e0a5eaad1413604d3e24ca98283c6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address[16])",
          "register(address,uint8,bool)",
          "upgradePackage(uint8,bool)",
          "withdraw(uint96)",
          "distributePools()",
          "blacklistUser(address,bool)",
          "updateWithdrawalRate(address,uint8)",
          "updateUserRank(address,uint8)",
          "emergencyWithdraw(uint256)",
          "recoverUSDT(uint256)",
          "getUserInfo(address)",
          "getDirectReferrals(address)",
          "getUplineChain(address)",
          "getBinaryMatrix(address)",
          "getPoolBalances()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "users",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(User)1855_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:48"
            },
            {
              "label": "packages",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint8,t_struct(Package)1870_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:49"
            },
            {
              "label": "directReferrals",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:50"
            },
            {
              "label": "uplineChain",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_address)30_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:51"
            },
            {
              "label": "binaryMatrix",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_address)2_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:52"
            },
            {
              "label": "leaderPool",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Pool)1877_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:54"
            },
            {
              "label": "helpPool",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Pool)1877_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:55"
            },
            {
              "label": "clubPool",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Pool)1877_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:56"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IERC20)1392",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:58"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPriceFeed)1820",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:59"
            },
            {
              "label": "adminIds",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)16_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:60"
            },
            {
              "label": "lastTxBlock",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)224_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)288_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)16_storage": {
              "label": "address[16]",
              "numberOfBytes": "512"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_address)30_storage": {
              "label": "address[30]",
              "numberOfBytes": "960"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1392": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)1820": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_address)2_storage)": {
              "label": "mapping(address => address[2])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)30_storage)": {
              "label": "mapping(address => address[30])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)1855_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Package)1870_storage)": {
              "label": "mapping(uint8 => struct OrphiCrowdFund.Package)",
              "numberOfBytes": "32"
            },
            "t_struct(Package)1870_storage": {
              "label": "struct OrphiCrowdFund.Package",
              "members": [
                {
                  "label": "price",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "directBonus",
                  "type": "t_uint16",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "levelBonus",
                  "type": "t_uint16",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "uplineBonus",
                  "type": "t_uint16",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "leaderBonus",
                  "type": "t_uint16",
                  "offset": 18,
                  "slot": "0"
                },
                {
                  "label": "helpBonus",
                  "type": "t_uint16",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "clubBonus",
                  "type": "t_uint16",
                  "offset": 22,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Pool)1877_storage": {
              "label": "struct OrphiCrowdFund.Pool",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastDistribution",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "interval",
                  "type": "t_uint32",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)1855_storage": {
              "label": "struct OrphiCrowdFund.User",
              "members": [
                {
                  "label": "isRegistered",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalInvestment",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "1"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "2"
                },
                {
                  "label": "directReferrals",
                  "type": "t_uint32",
                  "offset": 24,
                  "slot": "2"
                },
                {
                  "label": "teamSize",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "2"
                },
                {
                  "label": "packageLevel",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rank",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                },
                {
                  "label": "withdrawalRate",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)224_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)288_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:IPriceFeed": {
        "src": "contracts/OrphiCrowdFund.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:OrphiCrowdFund": {
        "src": "contracts/OrphiCrowdFund.sol:15",
        "version": {
          "withMetadata": "8bcbe17b728101910633e877f60516ae2b2aa150c111bc7b9f94653b3f0e9e41",
          "withoutMetadata": "e1920702c703f042e351b75c5c678e7879b57f14aca5bec3247db895cc68e0e6",
          "linkedWithoutMetadata": "e1920702c703f042e351b75c5c678e7879b57f14aca5bec3247db895cc68e0e6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address[16])",
          "register(address,uint8,bool)",
          "upgradePackage(uint8,bool)",
          "withdraw(uint96)",
          "distributePools()",
          "blacklistUser(address,bool)",
          "updateWithdrawalRate(address,uint8)",
          "updateUserRank(address,uint8)",
          "emergencyWithdraw(uint256)",
          "recoverUSDT(uint256)",
          "getUserInfo(address)",
          "getDirectReferrals(address)",
          "getUplineChain(address)",
          "getBinaryMatrix(address)",
          "getPoolBalances()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "users",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(User)1855_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:48"
            },
            {
              "label": "packages",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint8,t_struct(Package)1870_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:49"
            },
            {
              "label": "directReferrals",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:50"
            },
            {
              "label": "uplineChain",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_address)30_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:51"
            },
            {
              "label": "binaryMatrix",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_address)2_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:52"
            },
            {
              "label": "leaderPool",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Pool)1877_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:54"
            },
            {
              "label": "helpPool",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Pool)1877_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:55"
            },
            {
              "label": "clubPool",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Pool)1877_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:56"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IERC20)1392",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:58"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPriceFeed)1820",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:59"
            },
            {
              "label": "adminIds",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)16_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:60"
            },
            {
              "label": "lastTxBlock",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)224_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)288_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)16_storage": {
              "label": "address[16]",
              "numberOfBytes": "512"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_address)30_storage": {
              "label": "address[30]",
              "numberOfBytes": "960"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)1392": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)1820": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_address)2_storage)": {
              "label": "mapping(address => address[2])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)30_storage)": {
              "label": "mapping(address => address[30])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)1855_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Package)1870_storage)": {
              "label": "mapping(uint8 => struct OrphiCrowdFund.Package)",
              "numberOfBytes": "32"
            },
            "t_struct(Package)1870_storage": {
              "label": "struct OrphiCrowdFund.Package",
              "members": [
                {
                  "label": "price",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "directBonus",
                  "type": "t_uint16",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "levelBonus",
                  "type": "t_uint16",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "uplineBonus",
                  "type": "t_uint16",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "leaderBonus",
                  "type": "t_uint16",
                  "offset": 18,
                  "slot": "0"
                },
                {
                  "label": "helpBonus",
                  "type": "t_uint16",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "clubBonus",
                  "type": "t_uint16",
                  "offset": 22,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Pool)1877_storage": {
              "label": "struct OrphiCrowdFund.Pool",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastDistribution",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "interval",
                  "type": "t_uint32",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)1855_storage": {
              "label": "struct OrphiCrowdFund.User",
              "members": [
                {
                  "label": "isRegistered",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalInvestment",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "1"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "2"
                },
                {
                  "label": "directReferrals",
                  "type": "t_uint32",
                  "offset": 24,
                  "slot": "2"
                },
                {
                  "label": "teamSize",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "2"
                },
                {
                  "label": "packageLevel",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rank",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                },
                {
                  "label": "withdrawalRate",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "contracts/mocks/MockPriceFeed.sol:MockPriceFeed": {
        "src": "contracts/mocks/MockPriceFeed.sol:4",
        "version": {
          "withMetadata": "a99df36f8e459ce7afe021acee11c77729a4e24b818d09ad63651b58204ada0c",
          "withoutMetadata": "95160aa28c4df2b4e9c24734059a35595727be2479cdbd0346b1d7eaaf0e17f7",
          "linkedWithoutMetadata": "95160aa28c4df2b4e9c24734059a35595727be2479cdbd0346b1d7eaaf0e17f7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestRoundData()",
          "setPrice(int256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "price",
            "src": "contracts/mocks/MockPriceFeed.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "MockPriceFeed",
              "src": "contracts/mocks/MockPriceFeed.sol:5"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "11d6333fd35acc467656f5e5bbd4f318981bdc65025e6de3878cccf713e3309a",
          "withoutMetadata": "af7b6308546550a9cefcad84c423ba6aed964254258e016c58ad6277532d88dc",
          "linkedWithoutMetadata": "af7b6308546550a9cefcad84c423ba6aed964254258e016c58ad6277532d88dc"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/CoreLogic.sol:CoreLogic": {
        "src": "contracts/CoreLogic.sol:6",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataTypes.sol:DataTypes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts/IPriceOracle.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:AutomationCompatibleInterface": {
        "src": "contracts/MockInterfaces.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:IERC20": {
        "src": "contracts/MockInterfaces.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Ownable": {
        "src": "contracts/MockInterfaces.sol:31",
        "version": {
          "withMetadata": "c979c47e2e73733938972d55b2f76065744b2f8e7b9ab3ef9c5d3176cc57c5e3",
          "withoutMetadata": "35f8fb6b09b5d8e9e4239de3f03f04df3739139328b8f8ae1876aad3643172a8",
          "linkedWithoutMetadata": "35f8fb6b09b5d8e9e4239de3f03f04df3739139328b8f8ae1876aad3643172a8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/MockInterfaces.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/MockInterfaces.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Pausable": {
        "src": "contracts/MockInterfaces.sol:65",
        "version": {
          "withMetadata": "766a5905d6218ca160d5de2b0cb06e8933b27a7bde1d5a871e34359137c92aa8",
          "withoutMetadata": "b8a9196cfa1c2fb5e431cdf27771d30fc2cca0ff9ce8892b90afaf64a198dc42",
          "linkedWithoutMetadata": "b8a9196cfa1c2fb5e431cdf27771d30fc2cca0ff9ce8892b90afaf64a198dc42"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/MockInterfaces.sol:66"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:ReentrancyGuard": {
        "src": "contracts/MockInterfaces.sol:48",
        "version": {
          "withMetadata": "72f556b9d159593fb46b1ad9ef9a6a2d5b97604859c6ef794858e2b7c2e26acc",
          "withoutMetadata": "74b379ce88648b0a2439a0b663301ebca869c303fe8e1755c5fce311eba8bceb",
          "linkedWithoutMetadata": "74b379ce88648b0a2439a0b663301ebca869c303fe8e1755c5fce311eba8bceb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/MockInterfaces.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/MockInterfaces.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:SafeERC20": {
        "src": "contracts/MockInterfaces.sol:20",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:IPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:MockPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:10",
        "version": {
          "withMetadata": "d77ec64addf88e57db0a5d6e25b5cabf47c0d7b82ddd14ad4e60ddf71f9c8373",
          "withoutMetadata": "089157e2508671ad0da0ca8418d1b52a521b35eec8a97237a8226f26c92cb0fd",
          "linkedWithoutMetadata": "089157e2508671ad0da0ca8418d1b52a521b35eec8a97237a8226f26c92cb0fd"
        },
        "inherit": [
          "contracts/MockPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPrice(address)",
          "isHealthy()",
          "setPrice(uint256)",
          "setHealthy(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockPriceOracle",
            "src": "contracts/MockPriceOracle.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:11"
            },
            {
              "label": "healthy",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockUSDT.sol:MockUSDT": {
        "src": "contracts/MockUSDT.sol:12",
        "version": {
          "withMetadata": "aa5f44b4709fb095bac3263dae0f306ccaae54644df3183cc4e196288d430139",
          "withoutMetadata": "3465c132f8d7c7ddc36ed772ba4a834063e49617c7088a126ec912296cfc34dc",
          "linkedWithoutMetadata": "3465c132f8d7c7ddc36ed772ba4a834063e49617c7088a126ec912296cfc34dc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)",
          "burn(uint256)",
          "faucet(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockUSDT",
            "src": "contracts/MockUSDT.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockUSDT",
              "src": "contracts/MockUSDT.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:IPriceFeed": {
        "src": "contracts/OrphiCrowdFund.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:OrphiCrowdFund": {
        "src": "contracts/OrphiCrowdFund.sol:15",
        "version": {
          "withMetadata": "f7dd06398c7b5bc060f4ef7dd80ebcd71d73227e947817d8f9f11b31781e98f0",
          "withoutMetadata": "805f815cb4a7e85e45aade298308adadd5c9c5f11b6e9f6e9b6ca1038bb0d8d7",
          "linkedWithoutMetadata": "805f815cb4a7e85e45aade298308adadd5c9c5f11b6e9f6e9b6ca1038bb0d8d7"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address[16])",
          "register(address,uint8,bool)",
          "upgradePackage(uint8,bool)",
          "withdraw(uint96)",
          "distributePools()",
          "blacklistUser(address,bool)",
          "updateWithdrawalRate(address,uint8)",
          "updateUserRank(address,uint8)",
          "emergencyWithdraw(uint256)",
          "recoverUSDT(uint256)",
          "getUserInfo(address)",
          "getDirectReferrals(address)",
          "getUplineChain(address)",
          "getBinaryMatrix(address)",
          "getPoolBalances()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "users",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(User)4668_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:48"
            },
            {
              "label": "packages",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint8,t_struct(Package)4683_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:49"
            },
            {
              "label": "directReferrals",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:50"
            },
            {
              "label": "uplineChain",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_address)30_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:51"
            },
            {
              "label": "binaryMatrix",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_address)2_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:52"
            },
            {
              "label": "leaderPool",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Pool)4690_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:54"
            },
            {
              "label": "helpPool",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Pool)4690_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:55"
            },
            {
              "label": "clubPool",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Pool)4690_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:56"
            },
            {
              "label": "usdt",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IERC20)2842",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:58"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPriceFeed)4633",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:59"
            },
            {
              "label": "adminIds",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)16_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:60"
            },
            {
              "label": "lastTxBlock",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)16_storage": {
              "label": "address[16]",
              "numberOfBytes": "512"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_address)30_storage": {
              "label": "address[30]",
              "numberOfBytes": "960"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)2842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceFeed)4633": {
              "label": "contract IPriceFeed",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_address)2_storage)": {
              "label": "mapping(address => address[2])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)30_storage)": {
              "label": "mapping(address => address[30])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)4668_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_struct(Package)4683_storage)": {
              "label": "mapping(uint8 => struct OrphiCrowdFund.Package)",
              "numberOfBytes": "32"
            },
            "t_struct(Package)4683_storage": {
              "label": "struct OrphiCrowdFund.Package",
              "members": [
                {
                  "label": "price",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "directBonus",
                  "type": "t_uint16",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "levelBonus",
                  "type": "t_uint16",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "uplineBonus",
                  "type": "t_uint16",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "leaderBonus",
                  "type": "t_uint16",
                  "offset": 18,
                  "slot": "0"
                },
                {
                  "label": "helpBonus",
                  "type": "t_uint16",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "clubBonus",
                  "type": "t_uint16",
                  "offset": 22,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Pool)4690_storage": {
              "label": "struct OrphiCrowdFund.Pool",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastDistribution",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "interval",
                  "type": "t_uint32",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)4668_storage": {
              "label": "struct OrphiCrowdFund.User",
              "members": [
                {
                  "label": "isRegistered",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isBlacklisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalInvestment",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "1"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "2"
                },
                {
                  "label": "directReferrals",
                  "type": "t_uint32",
                  "offset": 24,
                  "slot": "2"
                },
                {
                  "label": "teamSize",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "2"
                },
                {
                  "label": "packageLevel",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rank",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                },
                {
                  "label": "withdrawalRate",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiProxy.sol:OrphiProxy": {
        "src": "contracts/OrphiProxy.sol:10",
        "version": {
          "withMetadata": "52c8b8ef86c654864dd71f200c9ae4d45315295c59404f13d04155c1fceba0f6",
          "withoutMetadata": "154e27741d5b98ce9cdad59f052d2332939275420f1abc60b0275ee511aac6ed",
          "linkedWithoutMetadata": "154e27741d5b98ce9cdad59f052d2332939275420f1abc60b0275ee511aac6ed"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiProxy",
            "src": "contracts/OrphiProxy.sol:11"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/SecurityLibrary.sol:SecurityLibrary": {
        "src": "contracts/SecurityLibrary.sol:8",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/TestContract.sol:TestContract": {
        "src": "contracts/TestContract.sol:4",
        "version": {
          "withMetadata": "fd2a7f9ce53c836a51a68d0d214e12cdbcd757f37475e76bf60059290d3ac836",
          "withoutMetadata": "891fd397f6bf241d24701f0f5ca92a9d0931947e0895ffb7e049f24516dbd11e",
          "linkedWithoutMetadata": "891fd397f6bf241d24701f0f5ca92a9d0931947e0895ffb7e049f24516dbd11e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/TestContract.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "TestContract",
              "src": "contracts/TestContract.sol:5"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/core/OrphiCommissions.sol:OrphiCommissions": {
        "src": "contracts/core/OrphiCommissions.sol:15",
        "version": {
          "withMetadata": "9496c4abe41a8d654c9f250708ff8156db2a1b5fed10790c7dbc1040d99f2175",
          "withoutMetadata": "c4edebc9a6c3c9b4652a911d233d9e2d545f729821e3809fb1fcae9380dfb6be",
          "linkedWithoutMetadata": "c4edebc9a6c3c9b4652a911d233d9e2d545f729821e3809fb1fcae9380dfb6be"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address)",
          "setMatrixContract(address)",
          "setPoolContract(address)",
          "setCommissionTier((uint256,uint256,uint256,uint256,uint256))",
          "registerUser(address,address,uint256,uint256)",
          "distributeCommissions(address,uint256)",
          "getTotalUserEarnings(address)",
          "getUserCommissionInfo(address)",
          "getWithdrawalRate(address)",
          "emergencyWithdraw(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiCommissions",
            "src": "contracts/core/OrphiCommissions.sol:120"
          },
          {
            "kind": "state-variable-assignment",
            "name": "LEVEL_PERCENTAGES",
            "src": "contracts/core/OrphiCommissions.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "defaultTier",
            "src": "contracts/core/OrphiCommissions.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "LEVEL_PERCENTAGES",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)10_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:43"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)2842",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:46"
            },
            {
              "label": "adminReserve",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:47"
            },
            {
              "label": "matrixContract",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:48"
            },
            {
              "label": "poolContract",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:49"
            },
            {
              "label": "defaultTier",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(CommissionTier)6782_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:51"
            },
            {
              "label": "userCommissions",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_struct(UserCommissions)6801_storage)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:60"
            },
            {
              "label": "userSponsor",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:61"
            },
            {
              "label": "userPackageLevel",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:62"
            },
            {
              "label": "userDirectSponsors",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserCommissions)6801_storage)": {
              "label": "mapping(address => struct OrphiCommissions.UserCommissions)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(CommissionTier)6782_storage": {
              "label": "struct OrphiCommissions.CommissionTier",
              "members": [
                {
                  "label": "sponsorRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "levelBonusRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "uplineRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "leaderRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "helpPoolRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserCommissions)6801_storage": {
              "label": "struct OrphiCommissions.UserCommissions",
              "members": [
                {
                  "label": "totalSponsorEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalLevelEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUplineEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalLeaderEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalHelpPoolEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isCapped",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/interfaces/IOrphiCrowdFund.sol:IOrphiCrowdFund": {
        "src": "contracts/interfaces/IOrphiCrowdFund.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proposeUpgrade(address)",
          "executeUpgrade(bytes32)",
          "cancelUpgrade(bytes32)",
          "setupUpgradeMultiSig(address[],uint256)",
          "signUpgrade(bytes32)",
          "register(address,uint8)",
          "contribute(address,uint8)",
          "BASIS_POINTS()",
          "UPGRADE_DELAY()",
          "POOL_MANAGER_ROLE()",
          "EMERGENCY_ROLE()",
          "UPGRADER_ROLE()",
          "ADMIN_ROLE()",
          "PAUSER_ROLE()",
          "getPendingUpgrades()",
          "getUpgradeProposal(bytes32)",
          "getUserEarnings(address)",
          "globalHelpPoolBalance()",
          "constants()",
          "getBasisPoints()",
          "getProxyAdmin()",
          "getImplementation()",
          "getLeaderInfo(address)",
          "getNodeInfo(address)",
          "getAdvancedCompensationInfo(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdminFunctions.sol:AdminFunctions": {
        "src": "contracts/libraries/AdminFunctions.sol:12",
        "version": {
          "withMetadata": "edeca185cea5f8b3f538c0f8a3b3144694b5b00265c1f81759eb9d82f0e8bf08",
          "withoutMetadata": "c7d4c1411046b6116c27efa54c7ee5806c0ed9be62c55806171041488c669a7d",
          "linkedWithoutMetadata": "c7d4c1411046b6116c27efa54c7ee5806c0ed9be62c55806171041488c669a7d"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [
          "addPackage(mapping(uint256 => struct DataStructures.Package) storage,uint256,uint96,uint16,uint16,uint16)",
          "distributeManualBonus(mapping(address => struct DataStructures.User) storage,address,uint256,string,address)",
          "emergencyWithdraw(address,uint256,address)",
          "recoverToken(address,uint256,address,address)",
          "updateBlacklist(mapping(address => struct DataStructures.User) storage,address,bool,string)",
          "updateOracle(address,address)",
          "setOraclePrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdminOperations.sol:AdminOperations": {
        "src": "contracts/libraries/AdminOperations.sol:11",
        "version": {
          "withMetadata": "dfe1adb16439de0e3e5e13b82f7af0a9b5b3900cd161e5d72946043d44205dc5",
          "withoutMetadata": "5df50dcb88f7872b8ab250f7b05929e321dea3fbe969a6b34d7c492d7a38fd34",
          "linkedWithoutMetadata": "5df50dcb88f7872b8ab250f7b05929e321dea3fbe969a6b34d7c492d7a38fd34"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "blacklistUser(mapping(address => struct DataStructures.User) storage,address,string)",
          "unblacklistUser(mapping(address => struct DataStructures.User) storage,address)",
          "setEarningsCap(mapping(address => struct DataStructures.User) storage,address,uint256,string)",
          "changeSponsor(mapping(address => struct DataStructures.User) storage,address,address,string)",
          "manualBonusDistribution(mapping(address => struct DataStructures.User) storage,address,uint256,string)",
          "emergencyWithdrawal(address payable,uint256)",
          "initializeAdminPrivilegeIDs(address[16] storage,address[16])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdvancedCompensationLogic.sol:AdvancedCompensationLogic": {
        "src": "contracts/libraries/AdvancedCompensationLogic.sol:8",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AssemblyLib.sol:AssemblyLib": {
        "src": "contracts/libraries/AssemblyLib.sol:4",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLib.sol:CommissionLib": {
        "src": "contracts/libraries/CommissionLib.sol:10",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UserStorage.sol:UserStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLibrary.sol:CommissionLibrary": {
        "src": "contracts/libraries/CommissionLibrary.sol:8",
        "version": {
          "withMetadata": "a7676258185d116670a6fac010f1755b5c3e2685f5dc844e83e78101d4f60ba1",
          "withoutMetadata": "dde5e9e61715dfd30927366c760059b87a80310b728326720c4e3289cfcb49ae",
          "linkedWithoutMetadata": "dde5e9e61715dfd30927366c760059b87a80310b728326720c4e3289cfcb49ae"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CompensationLogic.sol:CompensationLogic": {
        "src": "contracts/libraries/CompensationLogic.sol:10",
        "version": {
          "withMetadata": "9e82482d3963ad1e0e1929da600ff2c118145e7c7a7887412b65ab69a45e3f2e",
          "withoutMetadata": "786d47a7cd691b19a295d6b3518e793bac5706899235f448721a622c320eeb9a",
          "linkedWithoutMetadata": "786d47a7cd691b19a295d6b3518e793bac5706899235f448721a622c320eeb9a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ConstantsLib.sol:ConstantsLib": {
        "src": "contracts/libraries/ConstantsLib.sol:8",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CoreLib.sol:CoreLib": {
        "src": "contracts/libraries/CoreLib.sol:6",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/DataStructures.sol:DataStructures": {
        "src": "contracts/libraries/DataStructures.sol:41",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/DataTypes.sol:DataTypes": {
        "src": "contracts/libraries/DataTypes.sol:8",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/EventsLib.sol:EventsLib": {
        "src": "contracts/libraries/EventsLib.sol:8",
        "version": {
          "withMetadata": "214e4327a295b1e9fd15a1e83eb0116fa8973a8be43f1ddd264c589fffd1a837",
          "withoutMetadata": "54d0e271e2047b00dfdf934735e28cbde86b3e8712b140cac663a8a1f4b8e2b7",
          "linkedWithoutMetadata": "54d0e271e2047b00dfdf934735e28cbde86b3e8712b140cac663a8a1f4b8e2b7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "emitUserRegistered(address,address,uint8)",
          "emitContributionMade(address,uint256,uint8)",
          "emitFundsWithdrawn(address,uint256)",
          "emitBonusDistributed(address,address,uint256,uint8,string)",
          "emitCommissionPaid(address,address,uint256,uint8)",
          "emitMatrixPlacement(address,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/LeaderManagement.sol:LeaderManagement": {
        "src": "contracts/libraries/LeaderManagement.sol:8",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/MatrixLib.sol:MatrixLib": {
        "src": "contracts/libraries/MatrixLib.sol:11",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UserStorage.sol:UserStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/NetworkAnalytics.sol:NetworkAnalytics": {
        "src": "contracts/libraries/NetworkAnalytics.sol:8",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OperationsLib.sol:OperationsLib": {
        "src": "contracts/libraries/OperationsLib.sol:7",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/CoreLib.sol:CoreLib",
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OptimizedLib.sol:OptimizedLib": {
        "src": "contracts/libraries/OptimizedLib.sol:7",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OracleLib.sol:IPriceOracleMinimal": {
        "src": "contracts/libraries/OracleLib.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OracleLib.sol:OracleLib": {
        "src": "contracts/libraries/OracleLib.sol:8",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ReferralLib.sol:ReferralLib": {
        "src": "contracts/libraries/ReferralLib.sol:4",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagement.sol:UserManagementLib": {
        "src": "contracts/libraries/UserManagement.sol:7",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagementLib.sol:UserManagementLib": {
        "src": "contracts/libraries/UserManagementLib.sol:7",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagementOperations.sol:UserManagementOperations": {
        "src": "contracts/libraries/UserManagementOperations.sol:10",
        "version": {
          "withMetadata": "e24ab1a9fea8ffe29038424768521596734182722118d60fbfec406a8d236815",
          "withoutMetadata": "f1524f80298afad95226debf9ac0e1aec2eae813e15a9961052442e8eed41dee",
          "linkedWithoutMetadata": "f1524f80298afad95226debf9ac0e1aec2eae813e15a9961052442e8eed41dee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUser(mapping(address => struct DataTypes.User) storage,address)",
          "getUserBonuses(mapping(address => struct DataTypes.User) storage,address)",
          "getUserMatrix(mapping(address => struct DataTypes.User) storage,address)",
          "registerFreeAdminUser(mapping(address => struct DataTypes.User) storage,mapping(uint256 => address) storage,address[] storage,address,address,uint256,uint8)",
          "initializeLevelBonuses(mapping(uint256 => uint256) storage)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserOperations.sol:UserOperations": {
        "src": "contracts/libraries/UserOperations.sol:11",
        "version": {
          "withMetadata": "33ee6398057d25de64bc1580296be7bfa5793202e927d5c74fca80cb87bf5c52",
          "withoutMetadata": "78077ca7bbae3d896c4f02f7944ee1a5cdae9e83e3727b9e831d4a68a9866295",
          "linkedWithoutMetadata": "78077ca7bbae3d896c4f02f7944ee1a5cdae9e83e3727b9e831d4a68a9866295"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [
          "getUserEarnings(mapping(address => struct DataStructures.User) storage,address)",
          "updateUserInvestment(mapping(address => struct DataStructures.User) storage,address,uint96,uint8)",
          "addEarnings(mapping(address => struct DataStructures.User) storage,address,uint96)",
          "processWithdrawal(mapping(address => struct DataStructures.User) storage,address,uint96)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserStorage.sol:UserStorage": {
        "src": "contracts/libraries/UserStorage.sol:8",
        "version": {
          "withMetadata": "65cf00b075c22cad4e0925bff71224160600b11145fc2483574a687ec4c0781f",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/modules/InternalAdminManager.sol:InternalAdminManager": {
        "src": "contracts/modules/InternalAdminManager.sol:19",
        "version": {
          "withMetadata": "17d07aa6554d44b70f6131566ad3d4aaf6e4d9561fdc10f01aaaa81f73c8f1e6",
          "withoutMetadata": "7152bd3f23f49974c86ef4d98c3ac0c83fef4f2be7993394b0e18b5f0df0ae2a",
          "linkedWithoutMetadata": "7152bd3f23f49974c86ef4d98c3ac0c83fef4f2be7993394b0e18b5f0df0ae2a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "addInternalAdmin(address)",
          "removeInternalAdmin(address)",
          "replaceInternalAdmin(address,address)",
          "bulkAddInternalAdmins(address[])",
          "trackAdminActivity(address,string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()",
          "getInternalAdminAt(uint256)",
          "checkIsInternalAdmin(address)",
          "getAdminStats(address)",
          "getAdminManagerInfo()",
          "updateEmergencyAdmin(address)",
          "updateOrphiContract(address)",
          "emergencyPause()",
          "emergencyUnpause()",
          "emergencyClearAllAdmins()",
          "validateInternalAdmin(address)",
          "getRandomInternalAdmin()",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "internalAdmins",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:36"
            },
            {
              "label": "isInternalAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:39"
            },
            {
              "label": "adminIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:42"
            },
            {
              "label": "orphiContract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:45"
            },
            {
              "label": "emergencyAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:48"
            },
            {
              "label": "lastAdminUpdate",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:51"
            },
            {
              "label": "adminLastActivity",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:54"
            },
            {
              "label": "adminActionCount",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "70756e3a627d6bc57492233eaabb05d87ecde1d8abf062073ebaee48ee9124dd",
          "withoutMetadata": "81b8534ba9f81e61540677d7eac350e002fcab1909595b5a1dd87debdbb80123",
          "linkedWithoutMetadata": "81b8534ba9f81e61540677d7eac350e002fcab1909595b5a1dd87debdbb80123"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "7e7795e18d772e653b448696536d77261502f00a6e81e96fc3acd093534acc25",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "6b562c9a3070e17ccc2b4102216af7ed90b527060308075b0db056e8003414cd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "8db3d73a56996d569507dd82abdfe9dea55597d74dd8310c6e009a1be9cc924f",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "5d3dc056d3f1e21cb70cb4fd6b55f27f24a74a29a2694774371eb986b33ba971",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "e411b9c92770002ec22ec07d147a0a43b56b7dfb13454d50271e61ea602d52ab",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/CoreLogic.sol:CoreLogic": {
        "src": "contracts/CoreLogic.sol:6",
        "version": {
          "withMetadata": "f7df350ab9b1d4d97da9609aca9039abba5485313f94a8763d25faa52a6c3a76",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataTypes.sol:DataTypes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts/IPriceOracle.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:AutomationCompatibleInterface": {
        "src": "contracts/MockInterfaces.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:IERC20": {
        "src": "contracts/MockInterfaces.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Ownable": {
        "src": "contracts/MockInterfaces.sol:31",
        "version": {
          "withMetadata": "9b1f7e6a8c2a963ee3eb27884af8246e7c9bba2b0b6f63a8a5e2b0328ccce70e",
          "withoutMetadata": "18830a6df5b12f2c8aadebf32be2f15ded2764376cc3ca5a5a55177c5a77d05d",
          "linkedWithoutMetadata": "18830a6df5b12f2c8aadebf32be2f15ded2764376cc3ca5a5a55177c5a77d05d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/MockInterfaces.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/MockInterfaces.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Pausable": {
        "src": "contracts/MockInterfaces.sol:65",
        "version": {
          "withMetadata": "44e2408a7fc6bf02601e4f046590a2194dfe5b671c173f4b6037fa5309de0892",
          "withoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5",
          "linkedWithoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/MockInterfaces.sol:66"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:ReentrancyGuard": {
        "src": "contracts/MockInterfaces.sol:48",
        "version": {
          "withMetadata": "c608106657b96c3740e1f422cb5729e360ede41be470dfb4f2d4de142305ac76",
          "withoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd",
          "linkedWithoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/MockInterfaces.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/MockInterfaces.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:SafeERC20": {
        "src": "contracts/MockInterfaces.sol:20",
        "version": {
          "withMetadata": "9d3351695fbc0ccb8b092620ce185f32441ffb162545b06ae5f6ce8e02a13cef",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:IPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:MockPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:10",
        "version": {
          "withMetadata": "d03efb550077c2744beeb5f70590de276fb3b78c5e77593b9cf47470ed4e4679",
          "withoutMetadata": "88fce1f9b8295f51d879ebfbd8d9a6f738d523db13d3f144c9218783f1e9c47f",
          "linkedWithoutMetadata": "88fce1f9b8295f51d879ebfbd8d9a6f738d523db13d3f144c9218783f1e9c47f"
        },
        "inherit": [
          "contracts/MockPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPrice(address)",
          "isHealthy()",
          "setPrice(uint256)",
          "setHealthy(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockPriceOracle",
            "src": "contracts/MockPriceOracle.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:11"
            },
            {
              "label": "healthy",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockUSDT.sol:MockUSDT": {
        "src": "contracts/MockUSDT.sol:12",
        "version": {
          "withMetadata": "e3be249602ae10d8e3af7dedeb9e21be728bc68b6eb881e37cdf9a2d3743c467",
          "withoutMetadata": "b1d30e5efd577238f3511a1e5f5e14f94d3ac4d986e5b0d2a6f741b055365f84",
          "linkedWithoutMetadata": "b1d30e5efd577238f3511a1e5f5e14f94d3ac4d986e5b0d2a6f741b055365f84"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)",
          "burn(uint256)",
          "faucet(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockUSDT",
            "src": "contracts/MockUSDT.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockUSDT",
              "src": "contracts/MockUSDT.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:OrphiCrowdFund": {
        "src": "contracts/OrphiCrowdFund.sol:125",
        "version": {
          "withMetadata": "c3c89380285002ec9e84308bce4b8ac73dfeaa8e03132bf79d72e35f8621d194",
          "withoutMetadata": "d3c1edf72215796b2b644c73a4c138fcbb2666cbabd0a8d758be484fba30345d",
          "linkedWithoutMetadata": "d3c1edf72215796b2b644c73a4c138fcbb2666cbabd0a8d758be484fba30345d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/ConstantsLib.sol:ConstantsLib",
          "contracts/libraries/CompensationLogic.sol:CompensationLogic",
          "contracts/libraries/BinaryMatrix.sol:BinaryMatrix",
          "contracts/libraries/LeaderManagement.sol:LeaderManagement",
          "contracts/libraries/AdvancedCompensationLogic.sol:AdvancedCompensationLogic"
        ],
        "methods": [
          "registerRootUser(address,uint8)",
          "adminFreeRegister(address,uint8,address,uint8)",
          "getUser(address)",
          "getUserBonuses(address)",
          "getUserPoolEligibility(address)",
          "getUserGenealogy(address)",
          "getTotalInvestments()",
          "getPackageAmount(uint256)",
          "getDirectReferrals(address)",
          "distributeBonuses()",
          "updateOracle(address)",
          "setOracleEnabled(bool)",
          "fetchOraclePrice()",
          "setOraclePrice(uint256)",
          "getCurrentOraclePrice()",
          "initialize()",
          "emergencyPause()",
          "emergencyUnpause()",
          "blacklistUser(address,string)",
          "unblacklistUser(address)",
          "setEarningsCap(address,uint256,string)",
          "changeSponsor(address,address,string)",
          "manualBonusDistribution(address,uint256,string)",
          "emergencyWithdrawal(address,uint256)",
          "recoverToken(address,uint256,address)",
          "updatePrice(uint256)",
          "setCurrencyMode(bool)",
          "initializeAdminPrivilegeIDs(address[16])",
          "registerFreeAdminUser(address,uint256)",
          "contribute(address,uint8,uint256,uint8)",
          "distributeGlobalHelpPool()",
          "distributeLeaderBonusPool()",
          "distributeClubPool()",
          "getPoolBalances()",
          "getNextGHPDistribution()",
          "getNextLeaderDistribution()",
          "getNextClubDistribution()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)2842",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:279"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:280"
            },
            {
              "label": "platformWallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:280"
            },
            {
              "label": "distributorWallet",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:282"
            },
            {
              "label": "auditWallet",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:283"
            },
            {
              "label": "emergencyWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:283"
            },
            {
              "label": "usdtMode",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:285"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:286"
            },
            {
              "label": "oracleEnabled",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:287"
            },
            {
              "label": "usdtPriceInBNB",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:289"
            },
            {
              "label": "packages",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Package)4868_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:292"
            },
            {
              "label": "totalPackages",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:293"
            },
            {
              "label": "userPackageLevel",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:293"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(User)4857_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:296"
            },
            {
              "label": "userIdToAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:297"
            },
            {
              "label": "allUsers",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:298"
            },
            {
              "label": "totalUsers",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:298"
            },
            {
              "label": "totalVolume",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:299"
            },
            {
              "label": "userCounter",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:301"
            },
            {
              "label": "directReferrals",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:302"
            },
            {
              "label": "binaryLeftChildren",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:303"
            },
            {
              "label": "binaryRightChildren",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:305"
            },
            {
              "label": "uplineChain",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_array(t_address)30_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:307"
            },
            {
              "label": "levelBonuses",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:309"
            },
            {
              "label": "distributionPools",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_string_memory_ptr,t_struct(DistributionPool)4879_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:313"
            },
            {
              "label": "globalHelpPoolBalance",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:314"
            },
            {
              "label": "leaderBonusPoolBalance",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:315"
            },
            {
              "label": "clubPoolBalance",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:317"
            },
            {
              "label": "totalPoolDistributed",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:318"
            },
            {
              "label": "lastGHPDistribution",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:319"
            },
            {
              "label": "ghpDistributionInterval",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:320"
            },
            {
              "label": "ghpEligibleUsers",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:320"
            },
            {
              "label": "lastGHPParticipation",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:323"
            },
            {
              "label": "leaderQualifications",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_enum(LeaderRank)4792,t_struct(LeaderQualification)4890_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:326"
            },
            {
              "label": "userLeaderRank",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_enum(LeaderRank)4792)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:328"
            },
            {
              "label": "lastLeaderBonusDistribution",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:329"
            },
            {
              "label": "qualifiedLeaders",
              "offset": 0,
              "slot": "34",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:330"
            },
            {
              "label": "clubPoolMembers",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:334"
            },
            {
              "label": "clubPoolEligible",
              "offset": 0,
              "slot": "36",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:335"
            },
            {
              "label": "lastClubPoolDistribution",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:337"
            },
            {
              "label": "blacklistedUsers",
              "offset": 0,
              "slot": "38",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:339"
            },
            {
              "label": "blacklistReasons",
              "offset": 0,
              "slot": "39",
              "type": "t_mapping(t_address,t_string_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:339"
            },
            {
              "label": "lastTransactionBlock",
              "offset": 0,
              "slot": "40",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:339"
            },
            {
              "label": "userNonces",
              "offset": 0,
              "slot": "41",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:340"
            },
            {
              "label": "globalEarningsCap",
              "offset": 0,
              "slot": "42",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:341"
            },
            {
              "label": "customEarningsCaps",
              "offset": 0,
              "slot": "43",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:341"
            },
            {
              "label": "totalUserEarnings",
              "offset": 0,
              "slot": "44",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:341"
            },
            {
              "label": "lastWithdrawalTime",
              "offset": 0,
              "slot": "45",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:344"
            },
            {
              "label": "totalWithdrawn",
              "offset": 0,
              "slot": "46",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:344"
            },
            {
              "label": "totalReinvested",
              "offset": 0,
              "slot": "47",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:344"
            },
            {
              "label": "userInvestments",
              "offset": 0,
              "slot": "48",
              "type": "t_mapping(t_address,t_array(t_struct(Investment)4901_storage)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:345"
            },
            {
              "label": "totalInvestments",
              "offset": 0,
              "slot": "49",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:347"
            },
            {
              "label": "totalBonusDistributed",
              "offset": 0,
              "slot": "50",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:348"
            },
            {
              "label": "totalGHPDistributed",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:348"
            },
            {
              "label": "totalLeaderBonusDistributed",
              "offset": 0,
              "slot": "52",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:348"
            },
            {
              "label": "totalClubPoolDistributed",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:349"
            },
            {
              "label": "emergencyMode",
              "offset": 0,
              "slot": "54",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:349"
            },
            {
              "label": "upgradeProposalTimestamp",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:349"
            },
            {
              "label": "proposedImplementation",
              "offset": 0,
              "slot": "56",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:350"
            },
            {
              "label": "backupAdminTimeLock",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:429"
            },
            {
              "label": "adminPrivilegeIDs",
              "offset": 0,
              "slot": "58",
              "type": "t_array(t_address)16_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:891"
            },
            {
              "label": "totalGHPPool",
              "offset": 0,
              "slot": "74",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:1010"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)16_storage": {
              "label": "address[16]",
              "numberOfBytes": "512"
            },
            "t_array(t_address)30_storage": {
              "label": "address[30]",
              "numberOfBytes": "960"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Investment)4901_storage)dyn_storage": {
              "label": "struct OrphiCrowdFund.Investment[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)2842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(LeaderRank)4792": {
              "label": "enum OrphiCrowdFund.LeaderRank",
              "members": [
                "NONE",
                "BRONZE",
                "SILVER",
                "GOLD",
                "PLATINUM",
                "DIAMOND"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)30_storage)": {
              "label": "mapping(address => address[30])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Investment)4901_storage)dyn_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.Investment[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(LeaderRank)4792)": {
              "label": "mapping(address => enum OrphiCrowdFund.LeaderRank)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)4857_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(LeaderRank)4792,t_struct(LeaderQualification)4890_storage)": {
              "label": "mapping(enum OrphiCrowdFund.LeaderRank => struct OrphiCrowdFund.LeaderQualification)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(DistributionPool)4879_storage)": {
              "label": "mapping(string => struct OrphiCrowdFund.DistributionPool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Package)4868_storage)": {
              "label": "mapping(uint256 => struct OrphiCrowdFund.Package)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DistributionPool)4879_storage": {
              "label": "struct OrphiCrowdFund.DistributionPool",
              "members": [
                {
                  "label": "totalBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalDistributed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastDistribution",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "distributionCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Investment)4901_storage": {
              "label": "struct OrphiCrowdFund.Investment",
              "members": [
                {
                  "label": "tier",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "earningsGenerated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(LeaderQualification)4890_storage": {
              "label": "struct OrphiCrowdFund.LeaderQualification",
              "members": [
                {
                  "label": "minDirectReferrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minTeamVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minPersonalVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "bonusPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Package)4868_storage": {
              "label": "struct OrphiCrowdFund.Package",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bnbAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usdtAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minDirectReferrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(User)4857_storage": {
              "label": "struct OrphiCrowdFund.User",
              "members": [
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "sponsor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "leftChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rightChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalInvestment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "directReferrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "teamSize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "leftVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "rightVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "packageLevel",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "joinTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "lastActivity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "lastWithdrawal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                },
                {
                  "label": "leaderRank",
                  "type": "t_enum(LeaderRank)4792",
                  "offset": 0,
                  "slot": "16"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "17"
                },
                {
                  "label": "ghpEligibleVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "18"
                },
                {
                  "label": "leaderBonusEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "19"
                },
                {
                  "label": "clubPoolEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "20"
                },
                {
                  "label": "ghpEligible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "21"
                },
                {
                  "label": "clubPoolEligible",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "21"
                },
                {
                  "label": "directBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "22"
                },
                {
                  "label": "levelBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "23"
                },
                {
                  "label": "uplineBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "24"
                }
              ],
              "numberOfBytes": "800"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiProxy.sol:OrphiProxy": {
        "src": "contracts/OrphiProxy.sol:10",
        "version": {
          "withMetadata": "620e99718eec15a2664efff8facadb1c227fa3e40d3f6e8e885a0dd45e4404c4",
          "withoutMetadata": "a26cd90661423ef4f31104e2e77a8a5078a793dc49416be36bb5b0eb18675278",
          "linkedWithoutMetadata": "a26cd90661423ef4f31104e2e77a8a5078a793dc49416be36bb5b0eb18675278"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiProxy",
            "src": "contracts/OrphiProxy.sol:11"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/SecurityLibrary.sol:SecurityLibrary": {
        "src": "contracts/SecurityLibrary.sol:8",
        "version": {
          "withMetadata": "dfcccab985df4a4788d9c98605590e9df52906391880d31fa5dd8b08557851ad",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/TestContract.sol:TestContract": {
        "src": "contracts/TestContract.sol:4",
        "version": {
          "withMetadata": "75c8321d852e0da99b8c74131c9d0d5e2ba45be3fe9af76ad3619349e441ece7",
          "withoutMetadata": "23e8dab8fda4644e85f962613c682c48f44410c3206b5b86b8507bb3b837c7dd",
          "linkedWithoutMetadata": "23e8dab8fda4644e85f962613c682c48f44410c3206b5b86b8507bb3b837c7dd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/TestContract.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "TestContract",
              "src": "contracts/TestContract.sol:5"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/core/OrphiCommissions.sol:OrphiCommissions": {
        "src": "contracts/core/OrphiCommissions.sol:15",
        "version": {
          "withMetadata": "bc8f21169f099a0292d94b3a0ca4adb1bad5bee60034391053fed90bb8f28fe0",
          "withoutMetadata": "73644f21fd94902039d90425f02f518f56742ddfd0a77463693b929e8b125734",
          "linkedWithoutMetadata": "73644f21fd94902039d90425f02f518f56742ddfd0a77463693b929e8b125734"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/libraries/CommissionLibrary.sol:CommissionLibrary"
        ],
        "methods": [
          "(address,address,address)",
          "setMatrixContract(address)",
          "setPoolContract(address)",
          "setCommissionTier((uint256,uint256,uint256,uint256,uint256))",
          "registerUser(address,address,uint256,uint256)",
          "distributeCommissions(address,uint256)",
          "getTotalUserEarnings(address)",
          "getUserCommissionInfo(address)",
          "getWithdrawalRate(address)",
          "emergencyWithdraw(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiCommissions",
            "src": "contracts/core/OrphiCommissions.sol:120"
          },
          {
            "kind": "state-variable-assignment",
            "name": "LEVEL_PERCENTAGES",
            "src": "contracts/core/OrphiCommissions.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "defaultTier",
            "src": "contracts/core/OrphiCommissions.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "LEVEL_PERCENTAGES",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)10_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:44"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)2842",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:47"
            },
            {
              "label": "adminReserve",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:48"
            },
            {
              "label": "matrixContract",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:49"
            },
            {
              "label": "poolContract",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:50"
            },
            {
              "label": "defaultTier",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(CommissionTier)9124_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:52"
            },
            {
              "label": "userCommissions",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_struct(UserCommissions)9143_storage)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:61"
            },
            {
              "label": "userSponsor",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:62"
            },
            {
              "label": "userPackageLevel",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:63"
            },
            {
              "label": "userDirectSponsors",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserCommissions)9143_storage)": {
              "label": "mapping(address => struct OrphiCommissions.UserCommissions)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(CommissionTier)9124_storage": {
              "label": "struct OrphiCommissions.CommissionTier",
              "members": [
                {
                  "label": "sponsorRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "levelBonusRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "uplineRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "leaderRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "helpPoolRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserCommissions)9143_storage": {
              "label": "struct OrphiCommissions.UserCommissions",
              "members": [
                {
                  "label": "totalSponsorEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalLevelEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUplineEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalLeaderEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalHelpPoolEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isCapped",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/interfaces/IOrphiCrowdFund.sol:IOrphiCrowdFund": {
        "src": "contracts/interfaces/IOrphiCrowdFund.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proposeUpgrade(address)",
          "executeUpgrade(bytes32)",
          "cancelUpgrade(bytes32)",
          "setupUpgradeMultiSig(address[],uint256)",
          "signUpgrade(bytes32)",
          "register(address,uint8)",
          "contribute(address,uint8)",
          "BASIS_POINTS()",
          "UPGRADE_DELAY()",
          "POOL_MANAGER_ROLE()",
          "EMERGENCY_ROLE()",
          "UPGRADER_ROLE()",
          "ADMIN_ROLE()",
          "PAUSER_ROLE()",
          "getPendingUpgrades()",
          "getUpgradeProposal(bytes32)",
          "getUserEarnings(address)",
          "globalHelpPoolBalance()",
          "constants()",
          "getBasisPoints()",
          "getProxyAdmin()",
          "getImplementation()",
          "getLeaderInfo(address)",
          "getNodeInfo(address)",
          "getAdvancedCompensationInfo(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdminFunctions.sol:AdminFunctions": {
        "src": "contracts/libraries/AdminFunctions.sol:12",
        "version": {
          "withMetadata": "b43d5808a04e07b9d5b4c25e9a5256c279a48b26afb424d2b939a9d999e6b668",
          "withoutMetadata": "699aaab9181bd8127f263d79517d176b71229da091e93de3735da15140cffce3",
          "linkedWithoutMetadata": "699aaab9181bd8127f263d79517d176b71229da091e93de3735da15140cffce3"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [
          "addPackage(mapping(uint256 => struct DataStructures.Package) storage,uint256,uint128,uint128,uint32,bool,uint128)",
          "distributeManualBonus(mapping(address => struct DataStructures.User) storage,address,uint256,string,address)",
          "emergencyWithdraw(address,uint256,address)",
          "recoverToken(address,uint256,address,address)",
          "updateBlacklist(mapping(address => struct DataStructures.User) storage,address,bool,string)",
          "updateOracle(address,address)",
          "setOraclePrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdminOperations.sol:AdminOperations": {
        "src": "contracts/libraries/AdminOperations.sol:11",
        "version": {
          "withMetadata": "3ee3ef14f225598745bdff707c9ddaa4a874889915670a42836016f63269d52e",
          "withoutMetadata": "fd8e404de75c5d78294dce32d972bbef85cecc8b66ebd7132b2e21809135a555",
          "linkedWithoutMetadata": "fd8e404de75c5d78294dce32d972bbef85cecc8b66ebd7132b2e21809135a555"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataTypes.sol:DataTypes"
        ],
        "methods": [
          "blacklistUser(mapping(address => struct DataTypes.User) storage,address,string)",
          "unblacklistUser(mapping(address => struct DataTypes.User) storage,address,string)",
          "setEarningsCap(mapping(address => struct DataTypes.User) storage,address,uint256)",
          "changeSponsor(mapping(address => struct DataTypes.User) storage,address,address)",
          "distributeManualBonus(mapping(address => struct DataTypes.User) storage,address,uint256,string)",
          "distributeGlobalUplineBonus(mapping(address => struct DataTypes.User) storage,mapping(address => mapping(uint256 => address)) storage,address,uint256,uint256,uint256,uint256)",
          "distributeBonuses(mapping(address => struct DataTypes.User) storage,mapping(uint256 => uint256) storage,address,uint256,uint256,uint256)",
          "updatePools(uint256,uint256,uint256,uint256,uint256)",
          "emergencyWithdraw(address,address,uint256)",
          "recoverTokens(address,address,uint256)",
          "getUserPoolEligibility(mapping(address => struct DataTypes.User) storage,address)",
          "registerRootUser(mapping(address => struct DataTypes.User) storage,mapping(uint8 => uint256) storage,address,uint8,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdvancedCompensationLogic.sol:AdvancedCompensationLogic": {
        "src": "contracts/libraries/AdvancedCompensationLogic.sol:8",
        "version": {
          "withMetadata": "78a6306ef895f18ff5d5a0f8f59e1357f414c1ece10add523dabe2537e457082",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/BinaryMatrix.sol:BinaryMatrix": {
        "src": "contracts/libraries/BinaryMatrix.sol:10",
        "version": {
          "withMetadata": "93b486d524c438dcda71556e6b110ec566193801d93409d987dfb998ac7e2f3a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLib.sol:CommissionLib": {
        "src": "contracts/libraries/CommissionLib.sol:10",
        "version": {
          "withMetadata": "437dec2a8956a68777cac9137dcb52575ee3bcbc244748e06391e1de8a56ba75",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UserStorage.sol:UserStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLibrary.sol:CommissionLibrary": {
        "src": "contracts/libraries/CommissionLibrary.sol:8",
        "version": {
          "withMetadata": "c76e8ff0c110863d926190bbd5ff55d02299d9cb3b7984bfe8061354bb7c212f",
          "withoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5",
          "linkedWithoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CompensationLogic.sol:CompensationLogic": {
        "src": "contracts/libraries/CompensationLogic.sol:10",
        "version": {
          "withMetadata": "0340affeacd54bcbb944a48e919a5e979c923cd201acddd83f62c33dc3b254fa",
          "withoutMetadata": "3d8cf3edf06d3c86341588b416001b462c426f93d803016394dc24e59a34fa63",
          "linkedWithoutMetadata": "3d8cf3edf06d3c86341588b416001b462c426f93d803016394dc24e59a34fa63"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ConstantsLib.sol:ConstantsLib": {
        "src": "contracts/libraries/ConstantsLib.sol:8",
        "version": {
          "withMetadata": "b352cecf7ebc27ea6377f1b3f81c4304afb8505df9d346b84a11c013c9372add",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ContributionLogic.sol:ContributionLogic": {
        "src": "contracts/libraries/ContributionLogic.sol:12",
        "version": {
          "withMetadata": "c86ef9e90c2c7f26dcd04657494d029e452f1eda7b6774bfdd41c22a08042856",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/ConstantsLib.sol:ConstantsLib",
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ContributionLogic.sol:IERC20Decimals": {
        "src": "contracts/libraries/ContributionLogic.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/DataStructures.sol:DataStructures": {
        "src": "contracts/libraries/DataStructures.sol:8",
        "version": {
          "withMetadata": "372b3d5db4ffd13611a342e4a6b0dced75086c424bd9a3fa525656d6a7398a99",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/DataTypes.sol:DataTypes": {
        "src": "contracts/libraries/DataTypes.sol:8",
        "version": {
          "withMetadata": "3665395d2791a47508a93831c7ace7053d16f00fc597690283691517ff64efdc",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/EventsLib.sol:EventsLib": {
        "src": "contracts/libraries/EventsLib.sol:8",
        "version": {
          "withMetadata": "f04f5220c5cb56fa184211c606b19c8fefb4d5e82311c7baaca8bddf0a26e948",
          "withoutMetadata": "8318c3de7eda210b7f670f66ab906586332ef18937e493c757ca792f27c8b150",
          "linkedWithoutMetadata": "8318c3de7eda210b7f670f66ab906586332ef18937e493c757ca792f27c8b150"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "emitUserRegistered(address,address,uint8)",
          "emitContributionMade(address,uint256,uint8)",
          "emitFundsWithdrawn(address,uint256)",
          "emitBonusDistributed(address,address,uint256,uint8,string)",
          "emitCommissionPaid(address,address,uint256,uint8)",
          "emitMatrixPlacement(address,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/LeaderManagement.sol:LeaderManagement": {
        "src": "contracts/libraries/LeaderManagement.sol:8",
        "version": {
          "withMetadata": "7ac14c947a20efae3530af3dfbcbf49253fcc6059502333c198972cd2bc93e9c",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/MatrixLib.sol:MatrixLib": {
        "src": "contracts/libraries/MatrixLib.sol:11",
        "version": {
          "withMetadata": "0417a98ffb6b904a7eb7ab4edb1e7500600ebe5347879c15f65f6f993ff35ce2",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UserStorage.sol:UserStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/NetworkAnalytics.sol:NetworkAnalytics": {
        "src": "contracts/libraries/NetworkAnalytics.sol:8",
        "version": {
          "withMetadata": "7b1ac41807e855dcc9732bf358b924a3159319c2fa18ebe16f2289bb15c00d5b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OracleLib.sol:IPriceOracleMinimal": {
        "src": "contracts/libraries/OracleLib.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OracleLib.sol:OracleLib": {
        "src": "contracts/libraries/OracleLib.sol:8",
        "version": {
          "withMetadata": "c27ea6d1e9e119f6c374aaffa89403c3d4600c8fc65e8d36960bf021b77b83e7",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ReferralLib.sol:ReferralLib": {
        "src": "contracts/libraries/ReferralLib.sol:4",
        "version": {
          "withMetadata": "399e32437dd64bcd207da6957a459b6155c180b5b87becc49f656b513529419b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagement.sol:UserManagementLib": {
        "src": "contracts/libraries/UserManagement.sol:7",
        "version": {
          "withMetadata": "215845e970986096aec2bfa14f8c7a1df5b44836192693b50088b7c8c8d01bc6",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagementLib.sol:UserManagementLib": {
        "src": "contracts/libraries/UserManagementLib.sol:7",
        "version": {
          "withMetadata": "ee788c5b53f7f623c6cba76849f21ad2f951d84cee9b20d49f0e3ee9ac65a2e6",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagementOperations.sol:UserManagementOperations": {
        "src": "contracts/libraries/UserManagementOperations.sol:10",
        "version": {
          "withMetadata": "1a5fdda6c48d8443f0e1368b3b4895902f71012e9e8f83940b2cfcc5b5d547ae",
          "withoutMetadata": "8e55d832f0926293f793fdae89ffd4851523371d9d7439270f6ab2e140b8eff0",
          "linkedWithoutMetadata": "8e55d832f0926293f793fdae89ffd4851523371d9d7439270f6ab2e140b8eff0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUser(mapping(address => struct DataTypes.User) storage,address)",
          "getUserBonuses(mapping(address => struct DataTypes.User) storage,address)",
          "getUserMatrix(mapping(address => struct DataTypes.User) storage,address)",
          "registerFreeAdminUser(mapping(address => struct DataTypes.User) storage,mapping(uint256 => address) storage,address[] storage,address,address,uint256,uint8)",
          "initializeLevelBonuses(mapping(uint256 => uint256) storage)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserOperations.sol:UserOperations": {
        "src": "contracts/libraries/UserOperations.sol:11",
        "version": {
          "withMetadata": "f88ac11bed2eaa99f31bbeb1a9b04f3713351a6efde153388b8617a2301b4a3c",
          "withoutMetadata": "6abcacc89a198aa89dfdc301581eb42d808b75066253e5c4aba5cd0ae58f6ed5",
          "linkedWithoutMetadata": "6abcacc89a198aa89dfdc301581eb42d808b75066253e5c4aba5cd0ae58f6ed5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUserInfo(mapping(address => struct DataStructures.User) storage,address)",
          "getUserMatrix(mapping(address => struct DataStructures.User) storage,mapping(address => address[]) storage,address)",
          "getUserEarnings(mapping(address => struct DataStructures.User) storage,address)",
          "updateUserInvestment(mapping(address => struct DataStructures.User) storage,address,uint256,uint8)",
          "addEarnings(mapping(address => struct DataStructures.User) storage,address,uint256)",
          "processWithdrawal(mapping(address => struct DataStructures.User) storage,address,uint256)",
          "updateMatrixPosition(mapping(address => struct DataStructures.User) storage,address,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserStorage.sol:UserStorage": {
        "src": "contracts/libraries/UserStorage.sol:8",
        "version": {
          "withMetadata": "923daaeddaf22da42365968f0e83501ea16627f4dba6d428156fe8fd77dd34a3",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/WithdrawalLogic.sol:WithdrawalLogic": {
        "src": "contracts/libraries/WithdrawalLogic.sol:8",
        "version": {
          "withMetadata": "302f814051fd38d9cd475b39b55737b61338f3f26c577083c148fd28ca4dccff",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/ConstantsLib.sol:ConstantsLib",
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/modules/InternalAdminManager.sol:InternalAdminManager": {
        "src": "contracts/modules/InternalAdminManager.sol:19",
        "version": {
          "withMetadata": "79d2e91bcaf50675a7e7f5da5b07f890a9a97412e89bc49a4546d03064931c86",
          "withoutMetadata": "96ae197f7fca254010488197e25620f583839cb47b1673ad1f08f98e691c0102",
          "linkedWithoutMetadata": "96ae197f7fca254010488197e25620f583839cb47b1673ad1f08f98e691c0102"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "addInternalAdmin(address)",
          "removeInternalAdmin(address)",
          "replaceInternalAdmin(address,address)",
          "bulkAddInternalAdmins(address[])",
          "trackAdminActivity(address,string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()",
          "getInternalAdminAt(uint256)",
          "checkIsInternalAdmin(address)",
          "getAdminStats(address)",
          "getAdminManagerInfo()",
          "updateEmergencyAdmin(address)",
          "updateOrphiContract(address)",
          "emergencyPause()",
          "emergencyUnpause()",
          "emergencyClearAllAdmins()",
          "validateInternalAdmin(address)",
          "getRandomInternalAdmin()",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "internalAdmins",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:36"
            },
            {
              "label": "isInternalAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:39"
            },
            {
              "label": "adminIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:42"
            },
            {
              "label": "orphiContract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:45"
            },
            {
              "label": "emergencyAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:48"
            },
            {
              "label": "lastAdminUpdate",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:51"
            },
            {
              "label": "adminLastActivity",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:54"
            },
            {
              "label": "adminActionCount",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "d8386c9550a15718deddc9f80be8cbca0b20f51da7a46e69f14f6ab34d9f8370",
          "withoutMetadata": "d2e68eb126996aa8a996da2857ad7e00fdfb02c29992184ed6b55933c5d52af4",
          "linkedWithoutMetadata": "d2e68eb126996aa8a996da2857ad7e00fdfb02c29992184ed6b55933c5d52af4"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "641770333f7f8952cd6e043ef8574fa5063d093d8c8e585eb9ae4c53c1a158a9",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "bd026613d58a5896a876068466056dbffb12b659629f3f690b7e5d7c41764206",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "2049fa47c125cf6ef13f586fd9981322cacf7f38eb94ead94443454ee4911c75",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "659130c988470104277b4c2bbe45c0a05f95a021cfbae33c5e6a39d73934ba73",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "f4b0e85f57067cc9a40a054ffd2e828dd71cdb37939ac6ee5171365430eaaf46",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/CoreLogic.sol:CoreLogic": {
        "src": "contracts/CoreLogic.sol:6",
        "version": {
          "withMetadata": "387c30f37b48bb85d7fb574b97c6562cf712aaa6c6ab5ea68f46b165c72d01f0",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataTypes.sol:DataTypes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts/IPriceOracle.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:AutomationCompatibleInterface": {
        "src": "contracts/MockInterfaces.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:IERC20": {
        "src": "contracts/MockInterfaces.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Ownable": {
        "src": "contracts/MockInterfaces.sol:31",
        "version": {
          "withMetadata": "549d0005f407bb41941b0bf121db90937e4314b1b3ee3f39ab607c5fbd1fca41",
          "withoutMetadata": "ba2044e64422013a00515f3948e9da16c7192f1a161a3843e0ce478edb723e3f",
          "linkedWithoutMetadata": "ba2044e64422013a00515f3948e9da16c7192f1a161a3843e0ce478edb723e3f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/MockInterfaces.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/MockInterfaces.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Pausable": {
        "src": "contracts/MockInterfaces.sol:65",
        "version": {
          "withMetadata": "dceb3c0f39a2f068540c0b0b6960147674f4c0387119654b4524a9acaf4eac89",
          "withoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5",
          "linkedWithoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/MockInterfaces.sol:66"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:ReentrancyGuard": {
        "src": "contracts/MockInterfaces.sol:48",
        "version": {
          "withMetadata": "7a69eb1ffd5fe05128347eac2ce505078870437c30d66b2af9312f9a892800a3",
          "withoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd",
          "linkedWithoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/MockInterfaces.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/MockInterfaces.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:SafeERC20": {
        "src": "contracts/MockInterfaces.sol:20",
        "version": {
          "withMetadata": "be95ed0953cce07ad2a2043bf103de54e47933e7b31594c8a29cb6bb8adf4695",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:IPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:MockPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:10",
        "version": {
          "withMetadata": "a80301e7760dcb72ad1709e314d0fd87db9d32aabd7370786d16bde549b14ea3",
          "withoutMetadata": "45a51397415a50857dbdc46db92facec9de6bca91eb344553ce9e7548c40de52",
          "linkedWithoutMetadata": "45a51397415a50857dbdc46db92facec9de6bca91eb344553ce9e7548c40de52"
        },
        "inherit": [
          "contracts/MockPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPrice(address)",
          "isHealthy()",
          "setPrice(uint256)",
          "setHealthy(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockPriceOracle",
            "src": "contracts/MockPriceOracle.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:11"
            },
            {
              "label": "healthy",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockUSDT.sol:MockUSDT": {
        "src": "contracts/MockUSDT.sol:12",
        "version": {
          "withMetadata": "7fde70030dcd8a5bdf0384da78d199e594d1cca12523a243b9a8165c8d116b64",
          "withoutMetadata": "63c8003c19d5f719a5dcf558d92ce35daa9da807743417f2d71436d26531bea5",
          "linkedWithoutMetadata": "63c8003c19d5f719a5dcf558d92ce35daa9da807743417f2d71436d26531bea5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)",
          "burn(uint256)",
          "faucet(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockUSDT",
            "src": "contracts/MockUSDT.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockUSDT",
              "src": "contracts/MockUSDT.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:OrphiCrowdFund": {
        "src": "contracts/OrphiCrowdFund.sol:125",
        "version": {
          "withMetadata": "816e6783bcdcc1f73a9542e5f93ddd83082c0f5092518a6a28f520432d7d2cd6",
          "withoutMetadata": "1805482686550468b42cb7ca200286f8b16b0aa9ec7da51c5281e2f48b8a7b80",
          "linkedWithoutMetadata": "1805482686550468b42cb7ca200286f8b16b0aa9ec7da51c5281e2f48b8a7b80"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/ConstantsLib.sol:ConstantsLib",
          "contracts/libraries/CompensationLogic.sol:CompensationLogic",
          "contracts/libraries/BinaryMatrix.sol:BinaryMatrix",
          "contracts/libraries/LeaderManagement.sol:LeaderManagement",
          "contracts/libraries/AdvancedCompensationLogic.sol:AdvancedCompensationLogic"
        ],
        "methods": [
          "registerRootUser(address,uint8)",
          "adminFreeRegister(address,uint8,address,uint8)",
          "getUser(address)",
          "getUserBonuses(address)",
          "getUserPoolEligibility(address)",
          "getUserGenealogy(address)",
          "getTotalInvestments()",
          "getPackageAmount(uint256)",
          "getDirectReferrals(address)",
          "distributeBonuses()",
          "updateOracle(address)",
          "setOracleEnabled(bool)",
          "fetchOraclePrice()",
          "setOraclePrice(uint256)",
          "getCurrentOraclePrice()",
          "initialize()",
          "emergencyPause()",
          "emergencyUnpause()",
          "blacklistUser(address,string)",
          "unblacklistUser(address)",
          "setEarningsCap(address,uint256,string)",
          "changeSponsor(address,address,string)",
          "manualBonusDistribution(address,uint256,string)",
          "emergencyWithdrawal(address,uint256)",
          "recoverToken(address,uint256,address)",
          "updatePrice(uint256)",
          "setCurrencyMode(bool)",
          "initializeAdminPrivilegeIDs(address[16])",
          "registerFreeAdminUser(address,uint256)",
          "contribute(address,uint8,uint256,uint8)",
          "distributeGlobalHelpPool()",
          "distributeLeaderBonusPool()",
          "distributeClubPool()",
          "getPoolBalances()",
          "getNextGHPDistribution()",
          "getNextLeaderDistribution()",
          "getNextClubDistribution()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)2842",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:279"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:280"
            },
            {
              "label": "platformWallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:280"
            },
            {
              "label": "distributorWallet",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:282"
            },
            {
              "label": "auditWallet",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:283"
            },
            {
              "label": "emergencyWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:283"
            },
            {
              "label": "usdtMode",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:285"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:286"
            },
            {
              "label": "oracleEnabled",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:287"
            },
            {
              "label": "usdtPriceInBNB",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:289"
            },
            {
              "label": "packages",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Package)4868_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:292"
            },
            {
              "label": "totalPackages",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:293"
            },
            {
              "label": "userPackageLevel",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:293"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(User)4857_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:296"
            },
            {
              "label": "userIdToAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:297"
            },
            {
              "label": "allUsers",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:298"
            },
            {
              "label": "totalUsers",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:298"
            },
            {
              "label": "totalVolume",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:299"
            },
            {
              "label": "userCounter",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:301"
            },
            {
              "label": "directReferrals",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:302"
            },
            {
              "label": "binaryLeftChildren",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:303"
            },
            {
              "label": "binaryRightChildren",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:305"
            },
            {
              "label": "uplineChain",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_array(t_address)30_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:307"
            },
            {
              "label": "levelBonuses",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:309"
            },
            {
              "label": "distributionPools",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_string_memory_ptr,t_struct(DistributionPool)4879_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:313"
            },
            {
              "label": "globalHelpPoolBalance",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:314"
            },
            {
              "label": "leaderBonusPoolBalance",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:315"
            },
            {
              "label": "clubPoolBalance",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:317"
            },
            {
              "label": "totalPoolDistributed",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:318"
            },
            {
              "label": "lastGHPDistribution",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:319"
            },
            {
              "label": "ghpDistributionInterval",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:320"
            },
            {
              "label": "ghpEligibleUsers",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:320"
            },
            {
              "label": "lastGHPParticipation",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:323"
            },
            {
              "label": "leaderQualifications",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_enum(LeaderRank)4792,t_struct(LeaderQualification)4890_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:326"
            },
            {
              "label": "userLeaderRank",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_enum(LeaderRank)4792)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:328"
            },
            {
              "label": "lastLeaderBonusDistribution",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:329"
            },
            {
              "label": "qualifiedLeaders",
              "offset": 0,
              "slot": "34",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:330"
            },
            {
              "label": "clubPoolMembers",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:334"
            },
            {
              "label": "clubPoolEligible",
              "offset": 0,
              "slot": "36",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:335"
            },
            {
              "label": "lastClubPoolDistribution",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:337"
            },
            {
              "label": "blacklistedUsers",
              "offset": 0,
              "slot": "38",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:339"
            },
            {
              "label": "blacklistReasons",
              "offset": 0,
              "slot": "39",
              "type": "t_mapping(t_address,t_string_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:339"
            },
            {
              "label": "lastTransactionBlock",
              "offset": 0,
              "slot": "40",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:339"
            },
            {
              "label": "userNonces",
              "offset": 0,
              "slot": "41",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:340"
            },
            {
              "label": "globalEarningsCap",
              "offset": 0,
              "slot": "42",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:341"
            },
            {
              "label": "customEarningsCaps",
              "offset": 0,
              "slot": "43",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:341"
            },
            {
              "label": "totalUserEarnings",
              "offset": 0,
              "slot": "44",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:341"
            },
            {
              "label": "lastWithdrawalTime",
              "offset": 0,
              "slot": "45",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:344"
            },
            {
              "label": "totalWithdrawn",
              "offset": 0,
              "slot": "46",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:344"
            },
            {
              "label": "totalReinvested",
              "offset": 0,
              "slot": "47",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:344"
            },
            {
              "label": "userInvestments",
              "offset": 0,
              "slot": "48",
              "type": "t_mapping(t_address,t_array(t_struct(Investment)4901_storage)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:345"
            },
            {
              "label": "totalInvestments",
              "offset": 0,
              "slot": "49",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:347"
            },
            {
              "label": "totalBonusDistributed",
              "offset": 0,
              "slot": "50",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:348"
            },
            {
              "label": "totalGHPDistributed",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:348"
            },
            {
              "label": "totalLeaderBonusDistributed",
              "offset": 0,
              "slot": "52",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:348"
            },
            {
              "label": "totalClubPoolDistributed",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:349"
            },
            {
              "label": "emergencyMode",
              "offset": 0,
              "slot": "54",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:349"
            },
            {
              "label": "upgradeProposalTimestamp",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:349"
            },
            {
              "label": "proposedImplementation",
              "offset": 0,
              "slot": "56",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:350"
            },
            {
              "label": "backupAdminTimeLock",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:429"
            },
            {
              "label": "adminPrivilegeIDs",
              "offset": 0,
              "slot": "58",
              "type": "t_array(t_address)16_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:891"
            },
            {
              "label": "totalGHPPool",
              "offset": 0,
              "slot": "74",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:1010"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)16_storage": {
              "label": "address[16]",
              "numberOfBytes": "512"
            },
            "t_array(t_address)30_storage": {
              "label": "address[30]",
              "numberOfBytes": "960"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Investment)4901_storage)dyn_storage": {
              "label": "struct OrphiCrowdFund.Investment[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)2842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(LeaderRank)4792": {
              "label": "enum OrphiCrowdFund.LeaderRank",
              "members": [
                "NONE",
                "BRONZE",
                "SILVER",
                "GOLD",
                "PLATINUM",
                "DIAMOND"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)30_storage)": {
              "label": "mapping(address => address[30])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Investment)4901_storage)dyn_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.Investment[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(LeaderRank)4792)": {
              "label": "mapping(address => enum OrphiCrowdFund.LeaderRank)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)4857_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(LeaderRank)4792,t_struct(LeaderQualification)4890_storage)": {
              "label": "mapping(enum OrphiCrowdFund.LeaderRank => struct OrphiCrowdFund.LeaderQualification)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(DistributionPool)4879_storage)": {
              "label": "mapping(string => struct OrphiCrowdFund.DistributionPool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Package)4868_storage)": {
              "label": "mapping(uint256 => struct OrphiCrowdFund.Package)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DistributionPool)4879_storage": {
              "label": "struct OrphiCrowdFund.DistributionPool",
              "members": [
                {
                  "label": "totalBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalDistributed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastDistribution",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "distributionCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Investment)4901_storage": {
              "label": "struct OrphiCrowdFund.Investment",
              "members": [
                {
                  "label": "tier",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "earningsGenerated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(LeaderQualification)4890_storage": {
              "label": "struct OrphiCrowdFund.LeaderQualification",
              "members": [
                {
                  "label": "minDirectReferrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minTeamVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minPersonalVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "bonusPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Package)4868_storage": {
              "label": "struct OrphiCrowdFund.Package",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bnbAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usdtAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minDirectReferrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(User)4857_storage": {
              "label": "struct OrphiCrowdFund.User",
              "members": [
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "sponsor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "leftChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rightChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalInvestment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "directReferrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "teamSize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "leftVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "rightVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "packageLevel",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "joinTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "lastActivity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "lastWithdrawal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                },
                {
                  "label": "leaderRank",
                  "type": "t_enum(LeaderRank)4792",
                  "offset": 0,
                  "slot": "16"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "17"
                },
                {
                  "label": "ghpEligibleVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "18"
                },
                {
                  "label": "leaderBonusEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "19"
                },
                {
                  "label": "clubPoolEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "20"
                },
                {
                  "label": "ghpEligible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "21"
                },
                {
                  "label": "clubPoolEligible",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "21"
                },
                {
                  "label": "directBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "22"
                },
                {
                  "label": "levelBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "23"
                },
                {
                  "label": "uplineBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "24"
                }
              ],
              "numberOfBytes": "800"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiProxy.sol:OrphiProxy": {
        "src": "contracts/OrphiProxy.sol:10",
        "version": {
          "withMetadata": "c894548e3c2996d132b7e38f579d03d51d936bafc201e12e6956228fe088b064",
          "withoutMetadata": "ff3396dcb05d7828753afc0b4ad01be648900214aeb1f589b3f08c7b02ee2159",
          "linkedWithoutMetadata": "ff3396dcb05d7828753afc0b4ad01be648900214aeb1f589b3f08c7b02ee2159"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiProxy",
            "src": "contracts/OrphiProxy.sol:11"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/SecurityLibrary.sol:SecurityLibrary": {
        "src": "contracts/SecurityLibrary.sol:8",
        "version": {
          "withMetadata": "a05b3e551a825138e9bd8291b07119062ad88cec635a110c1f48092ad3a9f5ef",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/TestContract.sol:TestContract": {
        "src": "contracts/TestContract.sol:4",
        "version": {
          "withMetadata": "32740f5b9f8c30c9291dd8258ec523316d797317b3c1a2f79afb01347053fdaa",
          "withoutMetadata": "fcd5dfd2be354b4c002f1be5c53ce8933391ad55afce9caaad389de3c7a64431",
          "linkedWithoutMetadata": "fcd5dfd2be354b4c002f1be5c53ce8933391ad55afce9caaad389de3c7a64431"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/TestContract.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "TestContract",
              "src": "contracts/TestContract.sol:5"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/core/OrphiCommissions.sol:OrphiCommissions": {
        "src": "contracts/core/OrphiCommissions.sol:15",
        "version": {
          "withMetadata": "5191db9da0c2c4d9477e29ca0c0cbc30f5dfad85916d7ac42fa4962c8149d8da",
          "withoutMetadata": "5d2a6a69921dc2eeb771b6d24260b417fc3a3197e19dc5980787417f97d46261",
          "linkedWithoutMetadata": "5d2a6a69921dc2eeb771b6d24260b417fc3a3197e19dc5980787417f97d46261"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/libraries/CommissionLibrary.sol:CommissionLibrary"
        ],
        "methods": [
          "(address,address,address)",
          "setMatrixContract(address)",
          "setPoolContract(address)",
          "setCommissionTier((uint256,uint256,uint256,uint256,uint256))",
          "registerUser(address,address,uint256,uint256)",
          "distributeCommissions(address,uint256)",
          "getTotalUserEarnings(address)",
          "getUserCommissionInfo(address)",
          "getWithdrawalRate(address)",
          "emergencyWithdraw(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiCommissions",
            "src": "contracts/core/OrphiCommissions.sol:120"
          },
          {
            "kind": "state-variable-assignment",
            "name": "LEVEL_PERCENTAGES",
            "src": "contracts/core/OrphiCommissions.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "defaultTier",
            "src": "contracts/core/OrphiCommissions.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "LEVEL_PERCENTAGES",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)10_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:44"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)2842",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:47"
            },
            {
              "label": "adminReserve",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:48"
            },
            {
              "label": "matrixContract",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:49"
            },
            {
              "label": "poolContract",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:50"
            },
            {
              "label": "defaultTier",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(CommissionTier)9124_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:52"
            },
            {
              "label": "userCommissions",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_struct(UserCommissions)9143_storage)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:61"
            },
            {
              "label": "userSponsor",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:62"
            },
            {
              "label": "userPackageLevel",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:63"
            },
            {
              "label": "userDirectSponsors",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserCommissions)9143_storage)": {
              "label": "mapping(address => struct OrphiCommissions.UserCommissions)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(CommissionTier)9124_storage": {
              "label": "struct OrphiCommissions.CommissionTier",
              "members": [
                {
                  "label": "sponsorRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "levelBonusRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "uplineRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "leaderRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "helpPoolRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserCommissions)9143_storage": {
              "label": "struct OrphiCommissions.UserCommissions",
              "members": [
                {
                  "label": "totalSponsorEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalLevelEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUplineEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalLeaderEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalHelpPoolEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isCapped",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/interfaces/IOrphiCrowdFund.sol:IOrphiCrowdFund": {
        "src": "contracts/interfaces/IOrphiCrowdFund.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proposeUpgrade(address)",
          "executeUpgrade(bytes32)",
          "cancelUpgrade(bytes32)",
          "setupUpgradeMultiSig(address[],uint256)",
          "signUpgrade(bytes32)",
          "register(address,uint8)",
          "contribute(address,uint8)",
          "BASIS_POINTS()",
          "UPGRADE_DELAY()",
          "POOL_MANAGER_ROLE()",
          "EMERGENCY_ROLE()",
          "UPGRADER_ROLE()",
          "ADMIN_ROLE()",
          "PAUSER_ROLE()",
          "getPendingUpgrades()",
          "getUpgradeProposal(bytes32)",
          "getUserEarnings(address)",
          "globalHelpPoolBalance()",
          "constants()",
          "getBasisPoints()",
          "getProxyAdmin()",
          "getImplementation()",
          "getLeaderInfo(address)",
          "getNodeInfo(address)",
          "getAdvancedCompensationInfo(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdminFunctions.sol:AdminFunctions": {
        "src": "contracts/libraries/AdminFunctions.sol:12",
        "version": {
          "withMetadata": "a8b1154a32b2f0302e67411ba0b0cef04ff717b36d234188efa11d36f2e9afa2",
          "withoutMetadata": "a1b3b6df0839aa1646096eece28b4936c79ac44bf764d7760e22f65e5d0437d9",
          "linkedWithoutMetadata": "a1b3b6df0839aa1646096eece28b4936c79ac44bf764d7760e22f65e5d0437d9"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [
          "addPackage(mapping(uint256 => struct DataStructures.Package) storage,uint256,uint128,uint128,uint32,bool,uint128)",
          "distributeManualBonus(mapping(address => struct DataStructures.User) storage,address,uint256,string,address)",
          "emergencyWithdraw(address,uint256,address)",
          "recoverToken(address,uint256,address,address)",
          "updateBlacklist(mapping(address => struct DataStructures.User) storage,address,bool,string)",
          "updateOracle(address,address)",
          "setOraclePrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdminOperations.sol:AdminOperations": {
        "src": "contracts/libraries/AdminOperations.sol:11",
        "version": {
          "withMetadata": "07ce98c31a4ff589b4114e9bca754cd8a5e16247ebbc4edacdd0b7fd9380dc0b",
          "withoutMetadata": "bff4248593f5a5377653b77d8d02905293ed308aeb64421728bfe96f5df24b06",
          "linkedWithoutMetadata": "bff4248593f5a5377653b77d8d02905293ed308aeb64421728bfe96f5df24b06"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataTypes.sol:DataTypes"
        ],
        "methods": [
          "blacklistUser(mapping(address => struct DataTypes.User) storage,address,string)",
          "unblacklistUser(mapping(address => struct DataTypes.User) storage,address,string)",
          "setEarningsCap(mapping(address => struct DataTypes.User) storage,address,uint256)",
          "changeSponsor(mapping(address => struct DataTypes.User) storage,address,address)",
          "distributeManualBonus(mapping(address => struct DataTypes.User) storage,address,uint256,string)",
          "distributeGlobalUplineBonus(mapping(address => struct DataTypes.User) storage,mapping(address => mapping(uint256 => address)) storage,address,uint256,uint256,uint256,uint256)",
          "distributeBonuses(mapping(address => struct DataTypes.User) storage,mapping(uint256 => uint256) storage,address,uint256,uint256,uint256)",
          "updatePools(uint256,uint256,uint256,uint256,uint256)",
          "emergencyWithdraw(address,address,uint256)",
          "recoverTokens(address,address,uint256)",
          "getUserPoolEligibility(mapping(address => struct DataTypes.User) storage,address)",
          "registerRootUser(mapping(address => struct DataTypes.User) storage,mapping(uint8 => uint256) storage,address,uint8,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdvancedCompensationLogic.sol:AdvancedCompensationLogic": {
        "src": "contracts/libraries/AdvancedCompensationLogic.sol:8",
        "version": {
          "withMetadata": "3bacfec2aa5c44de6fa3776025f161fe64fd16247c8ac6ffcc9f14117edcc222",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/BinaryMatrix.sol:BinaryMatrix": {
        "src": "contracts/libraries/BinaryMatrix.sol:10",
        "version": {
          "withMetadata": "c43202008e2d45f4e523e881a96faeeaca0a403024e2dfc03448d19a31c4e625",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLib.sol:CommissionLib": {
        "src": "contracts/libraries/CommissionLib.sol:10",
        "version": {
          "withMetadata": "b23a3e7d7e1f9a438d3846b35cca2c163193ae2887d39c6554f3e895ca99ff0a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UserStorage.sol:UserStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLibrary.sol:CommissionLibrary": {
        "src": "contracts/libraries/CommissionLibrary.sol:8",
        "version": {
          "withMetadata": "d0aa63daa3806b74eed18aec69e9084ada77679f8f75f64a54f5b8d6bf55da55",
          "withoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5",
          "linkedWithoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CompensationLogic.sol:CompensationLogic": {
        "src": "contracts/libraries/CompensationLogic.sol:10",
        "version": {
          "withMetadata": "4191aeaadedc8a0b805009c6fe6f271e93bbe05e09fd91e652e892935b799af7",
          "withoutMetadata": "3d8cf3edf06d3c86341588b416001b462c426f93d803016394dc24e59a34fa63",
          "linkedWithoutMetadata": "3d8cf3edf06d3c86341588b416001b462c426f93d803016394dc24e59a34fa63"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ConstantsLib.sol:ConstantsLib": {
        "src": "contracts/libraries/ConstantsLib.sol:8",
        "version": {
          "withMetadata": "c046ae9855981135a80b130c2bc534db85a82f414977fff7ea023eaafd9539ea",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ContributionLogic.sol:ContributionLogic": {
        "src": "contracts/libraries/ContributionLogic.sol:12",
        "version": {
          "withMetadata": "d905805a36dd625120227aa9ae4c291cbc0ae28ae956d47dc3e9566b1c69cc77",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/ConstantsLib.sol:ConstantsLib",
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ContributionLogic.sol:IERC20Decimals": {
        "src": "contracts/libraries/ContributionLogic.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/DataStructures.sol:DataStructures": {
        "src": "contracts/libraries/DataStructures.sol:8",
        "version": {
          "withMetadata": "3c32b767fb1926ffd582289af86f0592e0e4e2f02c2f7a12fdce29b9d79595fb",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/DataTypes.sol:DataTypes": {
        "src": "contracts/libraries/DataTypes.sol:8",
        "version": {
          "withMetadata": "53f7e742a9983cff92bafb62a5a826063ddc410fecf76e7a3695544e119ddfb7",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/EventsLib.sol:EventsLib": {
        "src": "contracts/libraries/EventsLib.sol:8",
        "version": {
          "withMetadata": "a78c89c576394ea81b526936f022d7275fd9cf100d830029c6df1b18760f35ab",
          "withoutMetadata": "7708d5ead0aed1ab6fa5deff8fce4fd08bb5181a33c565deeb025be7acff67b0",
          "linkedWithoutMetadata": "7708d5ead0aed1ab6fa5deff8fce4fd08bb5181a33c565deeb025be7acff67b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "emitUserRegistered(address,address,uint8)",
          "emitContributionMade(address,uint256,uint8)",
          "emitFundsWithdrawn(address,uint256)",
          "emitBonusDistributed(address,address,uint256,uint8,string)",
          "emitCommissionPaid(address,address,uint256,uint8)",
          "emitMatrixPlacement(address,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/LeaderManagement.sol:LeaderManagement": {
        "src": "contracts/libraries/LeaderManagement.sol:8",
        "version": {
          "withMetadata": "68edda2c1c0219c579101690e549cf92ca6132875ce8067bc52ea49e0dcbd150",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/MatrixLib.sol:MatrixLib": {
        "src": "contracts/libraries/MatrixLib.sol:11",
        "version": {
          "withMetadata": "7e478c0b3624ad544e8d728550c9953f56ac59f04b075a36b72efe38e6c95257",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UserStorage.sol:UserStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/NetworkAnalytics.sol:NetworkAnalytics": {
        "src": "contracts/libraries/NetworkAnalytics.sol:8",
        "version": {
          "withMetadata": "1c55f0d3e335acbd8b275a35122b6f7319539dc8752163bd3f12da65cef6a53f",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OracleLib.sol:IPriceOracleMinimal": {
        "src": "contracts/libraries/OracleLib.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OracleLib.sol:OracleLib": {
        "src": "contracts/libraries/OracleLib.sol:8",
        "version": {
          "withMetadata": "8ba4ab690bc9aa4e5437f21b432b063aa1b7659aa502e373eccd1a31e56bc8ad",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ReferralLib.sol:ReferralLib": {
        "src": "contracts/libraries/ReferralLib.sol:4",
        "version": {
          "withMetadata": "f2b7d5325591a748199b5af234ca0a861481e98dbe6397eb9ae4fcbdb976b6c0",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagement.sol:UserManagementLib": {
        "src": "contracts/libraries/UserManagement.sol:7",
        "version": {
          "withMetadata": "c81b2d8589b463455c0af90ab47a3b7e5b0e6c0baab2b1fe6731c650c9610529",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagementLib.sol:UserManagementLib": {
        "src": "contracts/libraries/UserManagementLib.sol:7",
        "version": {
          "withMetadata": "42fa981a7d0a7252f5dfb5a49958278c05408389da81c40a15da845b03887ca0",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagementOperations.sol:UserManagementOperations": {
        "src": "contracts/libraries/UserManagementOperations.sol:10",
        "version": {
          "withMetadata": "2d25d28d2feee183188da3e3a47166b25de93aab2d55fc14b67051eb3c13e1b1",
          "withoutMetadata": "14df3dac137fc3f15914bc80c133cb2d392b6c38ad5b52b2d1a65e1ec7d20192",
          "linkedWithoutMetadata": "14df3dac137fc3f15914bc80c133cb2d392b6c38ad5b52b2d1a65e1ec7d20192"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUser(mapping(address => struct DataTypes.User) storage,address)",
          "getUserBonuses(mapping(address => struct DataTypes.User) storage,address)",
          "getUserMatrix(mapping(address => struct DataTypes.User) storage,address)",
          "registerFreeAdminUser(mapping(address => struct DataTypes.User) storage,mapping(uint256 => address) storage,address[] storage,address,address,uint256,uint8)",
          "initializeLevelBonuses(mapping(uint256 => uint256) storage)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserOperations.sol:UserOperations": {
        "src": "contracts/libraries/UserOperations.sol:11",
        "version": {
          "withMetadata": "943e98de6140e93f2c1c507e993df73a5043757226a90879d2d49484fa2de67f",
          "withoutMetadata": "01efaa7c4e475c5b25c5090c3cf9afc748cd8cc27b7f6692514ec54669fdeb40",
          "linkedWithoutMetadata": "01efaa7c4e475c5b25c5090c3cf9afc748cd8cc27b7f6692514ec54669fdeb40"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUserInfo(mapping(address => struct DataStructures.User) storage,address)",
          "getUserMatrix(mapping(address => struct DataStructures.User) storage,mapping(address => address[]) storage,address)",
          "getUserEarnings(mapping(address => struct DataStructures.User) storage,address)",
          "updateUserInvestment(mapping(address => struct DataStructures.User) storage,address,uint256,uint8)",
          "addEarnings(mapping(address => struct DataStructures.User) storage,address,uint256)",
          "processWithdrawal(mapping(address => struct DataStructures.User) storage,address,uint256)",
          "updateMatrixPosition(mapping(address => struct DataStructures.User) storage,address,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserStorage.sol:UserStorage": {
        "src": "contracts/libraries/UserStorage.sol:8",
        "version": {
          "withMetadata": "26bdc7f9e34d884204a3bec59d753f8a35240f9d91f0a836c906ec368422ac98",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/WithdrawalLogic.sol:WithdrawalLogic": {
        "src": "contracts/libraries/WithdrawalLogic.sol:8",
        "version": {
          "withMetadata": "aae25254ec498798af3249a117695ac5af913fb22f3121a7b826bb434e20e4be",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/ConstantsLib.sol:ConstantsLib",
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/modules/InternalAdminManager.sol:InternalAdminManager": {
        "src": "contracts/modules/InternalAdminManager.sol:19",
        "version": {
          "withMetadata": "d1b21039bef7e0e9b0aecba8695289cd9699a5f372611063bf594993da955ccd",
          "withoutMetadata": "af1580c3b1652bea39330ecf867f61714fc4c7d698634d3b326d519a3fc9fba4",
          "linkedWithoutMetadata": "af1580c3b1652bea39330ecf867f61714fc4c7d698634d3b326d519a3fc9fba4"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "addInternalAdmin(address)",
          "removeInternalAdmin(address)",
          "replaceInternalAdmin(address,address)",
          "bulkAddInternalAdmins(address[])",
          "trackAdminActivity(address,string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()",
          "getInternalAdminAt(uint256)",
          "checkIsInternalAdmin(address)",
          "getAdminStats(address)",
          "getAdminManagerInfo()",
          "updateEmergencyAdmin(address)",
          "updateOrphiContract(address)",
          "emergencyPause()",
          "emergencyUnpause()",
          "emergencyClearAllAdmins()",
          "validateInternalAdmin(address)",
          "getRandomInternalAdmin()",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "internalAdmins",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:36"
            },
            {
              "label": "isInternalAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:39"
            },
            {
              "label": "adminIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:42"
            },
            {
              "label": "orphiContract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:45"
            },
            {
              "label": "emergencyAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:48"
            },
            {
              "label": "lastAdminUpdate",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:51"
            },
            {
              "label": "adminLastActivity",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:54"
            },
            {
              "label": "adminActionCount",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "9e309ebc2c318d945664246d0c38008ec99f77b07fb22a3f377e6a58d3e18aa8",
          "withoutMetadata": "81b8534ba9f81e61540677d7eac350e002fcab1909595b5a1dd87debdbb80123",
          "linkedWithoutMetadata": "81b8534ba9f81e61540677d7eac350e002fcab1909595b5a1dd87debdbb80123"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "c18401848e06bfd9d2dd9f1fb3115d9d928def55ca8781860a810c1494a59f8b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "255f5d1e17870f07c7cd8a1515435e86882e4b615a5c28cdbd2b8afbea1f250b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "d1d01ca8b4e19122bd36243ed6da536e6e767c0c0400b2502d66b76c10bd4881",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "473d60c0451a5db8c737caf5fa65b6c6bd0f4a946a43fd052a6204a641b40854",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "e85c0d8abaf275d0aed943cf4804f4d1746226744376f5126f3e5378de017d3a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/CoreLogic.sol:CoreLogic": {
        "src": "contracts/CoreLogic.sol:6",
        "version": {
          "withMetadata": "70418a0df39068a72eaa22ffe6069c1d50b6233ffbff919d45cc481d8aa8a3c6",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataTypes.sol:DataTypes"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts/IPriceOracle.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:AutomationCompatibleInterface": {
        "src": "contracts/MockInterfaces.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:IERC20": {
        "src": "contracts/MockInterfaces.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Ownable": {
        "src": "contracts/MockInterfaces.sol:31",
        "version": {
          "withMetadata": "fbb5de62008362e015a705f3d13eaf4862e31b8126432755706b460b876b99d2",
          "withoutMetadata": "18830a6df5b12f2c8aadebf32be2f15ded2764376cc3ca5a5a55177c5a77d05d",
          "linkedWithoutMetadata": "18830a6df5b12f2c8aadebf32be2f15ded2764376cc3ca5a5a55177c5a77d05d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/MockInterfaces.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/MockInterfaces.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Pausable": {
        "src": "contracts/MockInterfaces.sol:65",
        "version": {
          "withMetadata": "529e5c3687937848d9dbc1f0e1c59b46191a2362a1c69e768a05b890258c2a30",
          "withoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5",
          "linkedWithoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/MockInterfaces.sol:66"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:ReentrancyGuard": {
        "src": "contracts/MockInterfaces.sol:48",
        "version": {
          "withMetadata": "313b09533515c1ea07049d8f1c0f9514d3444ac24a529f4937abcc2b99f51647",
          "withoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd",
          "linkedWithoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/MockInterfaces.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/MockInterfaces.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:SafeERC20": {
        "src": "contracts/MockInterfaces.sol:20",
        "version": {
          "withMetadata": "7a6fb04fa3a28a87bdc80f6e91d22c56443da4fe0c42308a0dfd5d6ce7bd00b8",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:IPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:MockPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:10",
        "version": {
          "withMetadata": "d5024c7b7a37b1b20606ea813f9d48636eb8c288d9f71c0b638b61460b782d35",
          "withoutMetadata": "88fce1f9b8295f51d879ebfbd8d9a6f738d523db13d3f144c9218783f1e9c47f",
          "linkedWithoutMetadata": "88fce1f9b8295f51d879ebfbd8d9a6f738d523db13d3f144c9218783f1e9c47f"
        },
        "inherit": [
          "contracts/MockPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPrice(address)",
          "isHealthy()",
          "setPrice(uint256)",
          "setHealthy(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockPriceOracle",
            "src": "contracts/MockPriceOracle.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:11"
            },
            {
              "label": "healthy",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockUSDT.sol:MockUSDT": {
        "src": "contracts/MockUSDT.sol:12",
        "version": {
          "withMetadata": "d314bda58a6005844ae14be31b1769be53c0883e83087be780edb6d1ef166a10",
          "withoutMetadata": "2ff5d4657ae5ca3c6505f52c55e1c3f8d142ffe9983c4f4e3f1045406cbf90bf",
          "linkedWithoutMetadata": "2ff5d4657ae5ca3c6505f52c55e1c3f8d142ffe9983c4f4e3f1045406cbf90bf"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)",
          "burn(uint256)",
          "faucet(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockUSDT",
            "src": "contracts/MockUSDT.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockUSDT",
              "src": "contracts/MockUSDT.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:OrphiCrowdFund": {
        "src": "contracts/OrphiCrowdFund.sol:125",
        "version": {
          "withMetadata": "0ede6592d79dc8a3b9d7cbf9a26247fce43794285c8936bf0517968add4849cf",
          "withoutMetadata": "64c9fe2d3967f150431ca0b94f80f9b3ae219470262187a713d781070db46f93",
          "linkedWithoutMetadata": "64c9fe2d3967f150431ca0b94f80f9b3ae219470262187a713d781070db46f93"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/ConstantsLib.sol:ConstantsLib",
          "contracts/libraries/CompensationLogic.sol:CompensationLogic",
          "contracts/libraries/BinaryMatrix.sol:BinaryMatrix",
          "contracts/libraries/LeaderManagement.sol:LeaderManagement",
          "contracts/libraries/AdvancedCompensationLogic.sol:AdvancedCompensationLogic"
        ],
        "methods": [
          "registerRootUser(address,uint8)",
          "adminFreeRegister(address,uint8,address,uint8)",
          "getUser(address)",
          "getUserBonuses(address)",
          "getUserPoolEligibility(address)",
          "getUserGenealogy(address)",
          "getTotalInvestments()",
          "getPackageAmount(uint256)",
          "getDirectReferrals(address)",
          "distributeBonuses()",
          "updateOracle(address)",
          "setOracleEnabled(bool)",
          "fetchOraclePrice()",
          "setOraclePrice(uint256)",
          "getCurrentOraclePrice()",
          "initialize()",
          "emergencyPause()",
          "emergencyUnpause()",
          "blacklistUser(address,string)",
          "unblacklistUser(address)",
          "setEarningsCap(address,uint256,string)",
          "changeSponsor(address,address,string)",
          "manualBonusDistribution(address,uint256,string)",
          "emergencyWithdrawal(address,uint256)",
          "recoverToken(address,uint256,address)",
          "updatePrice(uint256)",
          "setCurrencyMode(bool)",
          "initializeAdminPrivilegeIDs(address[16])",
          "registerFreeAdminUser(address,uint256)",
          "contribute(address,uint8,uint256,uint8)",
          "distributeGlobalHelpPool()",
          "distributeLeaderBonusPool()",
          "distributeClubPool()",
          "getPoolBalances()",
          "getNextGHPDistribution()",
          "getNextLeaderDistribution()",
          "getNextClubDistribution()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)2842",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:279"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:280"
            },
            {
              "label": "platformWallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:280"
            },
            {
              "label": "distributorWallet",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:282"
            },
            {
              "label": "auditWallet",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:283"
            },
            {
              "label": "emergencyWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:283"
            },
            {
              "label": "usdtMode",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:285"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:286"
            },
            {
              "label": "oracleEnabled",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:287"
            },
            {
              "label": "usdtPriceInBNB",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:289"
            },
            {
              "label": "packages",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(Package)4868_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:292"
            },
            {
              "label": "totalPackages",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:293"
            },
            {
              "label": "userPackageLevel",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:293"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(User)4857_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:296"
            },
            {
              "label": "userIdToAddress",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:297"
            },
            {
              "label": "allUsers",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:298"
            },
            {
              "label": "totalUsers",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:298"
            },
            {
              "label": "totalVolume",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:299"
            },
            {
              "label": "userCounter",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:301"
            },
            {
              "label": "directReferrals",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:302"
            },
            {
              "label": "binaryLeftChildren",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:303"
            },
            {
              "label": "binaryRightChildren",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:305"
            },
            {
              "label": "uplineChain",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_array(t_address)30_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:307"
            },
            {
              "label": "levelBonuses",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:309"
            },
            {
              "label": "distributionPools",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_string_memory_ptr,t_struct(DistributionPool)4879_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:313"
            },
            {
              "label": "globalHelpPoolBalance",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:314"
            },
            {
              "label": "leaderBonusPoolBalance",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:315"
            },
            {
              "label": "clubPoolBalance",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:317"
            },
            {
              "label": "totalPoolDistributed",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:318"
            },
            {
              "label": "lastGHPDistribution",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:319"
            },
            {
              "label": "ghpDistributionInterval",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:320"
            },
            {
              "label": "ghpEligibleUsers",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:320"
            },
            {
              "label": "lastGHPParticipation",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:323"
            },
            {
              "label": "leaderQualifications",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_enum(LeaderRank)4792,t_struct(LeaderQualification)4890_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:326"
            },
            {
              "label": "userLeaderRank",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_enum(LeaderRank)4792)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:328"
            },
            {
              "label": "lastLeaderBonusDistribution",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:329"
            },
            {
              "label": "qualifiedLeaders",
              "offset": 0,
              "slot": "34",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:330"
            },
            {
              "label": "clubPoolMembers",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:334"
            },
            {
              "label": "clubPoolEligible",
              "offset": 0,
              "slot": "36",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:335"
            },
            {
              "label": "lastClubPoolDistribution",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:337"
            },
            {
              "label": "blacklistedUsers",
              "offset": 0,
              "slot": "38",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:339"
            },
            {
              "label": "blacklistReasons",
              "offset": 0,
              "slot": "39",
              "type": "t_mapping(t_address,t_string_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:339"
            },
            {
              "label": "lastTransactionBlock",
              "offset": 0,
              "slot": "40",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:339"
            },
            {
              "label": "userNonces",
              "offset": 0,
              "slot": "41",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:340"
            },
            {
              "label": "globalEarningsCap",
              "offset": 0,
              "slot": "42",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:341"
            },
            {
              "label": "customEarningsCaps",
              "offset": 0,
              "slot": "43",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:341"
            },
            {
              "label": "totalUserEarnings",
              "offset": 0,
              "slot": "44",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:341"
            },
            {
              "label": "lastWithdrawalTime",
              "offset": 0,
              "slot": "45",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:344"
            },
            {
              "label": "totalWithdrawn",
              "offset": 0,
              "slot": "46",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:344"
            },
            {
              "label": "totalReinvested",
              "offset": 0,
              "slot": "47",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:344"
            },
            {
              "label": "userInvestments",
              "offset": 0,
              "slot": "48",
              "type": "t_mapping(t_address,t_array(t_struct(Investment)4901_storage)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:345"
            },
            {
              "label": "totalInvestments",
              "offset": 0,
              "slot": "49",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:347"
            },
            {
              "label": "totalBonusDistributed",
              "offset": 0,
              "slot": "50",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:348"
            },
            {
              "label": "totalGHPDistributed",
              "offset": 0,
              "slot": "51",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:348"
            },
            {
              "label": "totalLeaderBonusDistributed",
              "offset": 0,
              "slot": "52",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:348"
            },
            {
              "label": "totalClubPoolDistributed",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:349"
            },
            {
              "label": "emergencyMode",
              "offset": 0,
              "slot": "54",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:349"
            },
            {
              "label": "upgradeProposalTimestamp",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:349"
            },
            {
              "label": "proposedImplementation",
              "offset": 0,
              "slot": "56",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:350"
            },
            {
              "label": "backupAdminTimeLock",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:429"
            },
            {
              "label": "adminPrivilegeIDs",
              "offset": 0,
              "slot": "58",
              "type": "t_array(t_address)16_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:891"
            },
            {
              "label": "totalGHPPool",
              "offset": 0,
              "slot": "74",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:1010"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)16_storage": {
              "label": "address[16]",
              "numberOfBytes": "512"
            },
            "t_array(t_address)30_storage": {
              "label": "address[30]",
              "numberOfBytes": "960"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Investment)4901_storage)dyn_storage": {
              "label": "struct OrphiCrowdFund.Investment[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)2842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(LeaderRank)4792": {
              "label": "enum OrphiCrowdFund.LeaderRank",
              "members": [
                "NONE",
                "BRONZE",
                "SILVER",
                "GOLD",
                "PLATINUM",
                "DIAMOND"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)30_storage)": {
              "label": "mapping(address => address[30])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Investment)4901_storage)dyn_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.Investment[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(LeaderRank)4792)": {
              "label": "mapping(address => enum OrphiCrowdFund.LeaderRank)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)4857_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(LeaderRank)4792,t_struct(LeaderQualification)4890_storage)": {
              "label": "mapping(enum OrphiCrowdFund.LeaderRank => struct OrphiCrowdFund.LeaderQualification)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(DistributionPool)4879_storage)": {
              "label": "mapping(string => struct OrphiCrowdFund.DistributionPool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Package)4868_storage)": {
              "label": "mapping(uint256 => struct OrphiCrowdFund.Package)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DistributionPool)4879_storage": {
              "label": "struct OrphiCrowdFund.DistributionPool",
              "members": [
                {
                  "label": "totalBalance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalDistributed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastDistribution",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "distributionCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Investment)4901_storage": {
              "label": "struct OrphiCrowdFund.Investment",
              "members": [
                {
                  "label": "tier",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "earningsGenerated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(LeaderQualification)4890_storage": {
              "label": "struct OrphiCrowdFund.LeaderQualification",
              "members": [
                {
                  "label": "minDirectReferrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minTeamVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minPersonalVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "bonusPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Package)4868_storage": {
              "label": "struct OrphiCrowdFund.Package",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bnbAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usdtAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minDirectReferrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(User)4857_storage": {
              "label": "struct OrphiCrowdFund.User",
              "members": [
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "referrer",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "sponsor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "leftChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rightChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalInvestment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "directReferrals",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "teamSize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "leftVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "rightVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "packageLevel",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "joinTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "lastActivity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "lastWithdrawal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                },
                {
                  "label": "leaderRank",
                  "type": "t_enum(LeaderRank)4792",
                  "offset": 0,
                  "slot": "16"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "17"
                },
                {
                  "label": "ghpEligibleVolume",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "18"
                },
                {
                  "label": "leaderBonusEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "19"
                },
                {
                  "label": "clubPoolEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "20"
                },
                {
                  "label": "ghpEligible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "21"
                },
                {
                  "label": "clubPoolEligible",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "21"
                },
                {
                  "label": "directBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "22"
                },
                {
                  "label": "levelBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "23"
                },
                {
                  "label": "uplineBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "24"
                }
              ],
              "numberOfBytes": "800"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiProxy.sol:OrphiProxy": {
        "src": "contracts/OrphiProxy.sol:10",
        "version": {
          "withMetadata": "b1bac6dd932f9bcef5bee452fee45b2b8265cf4683cd76a11e0ec28912565366",
          "withoutMetadata": "a26cd90661423ef4f31104e2e77a8a5078a793dc49416be36bb5b0eb18675278",
          "linkedWithoutMetadata": "a26cd90661423ef4f31104e2e77a8a5078a793dc49416be36bb5b0eb18675278"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiProxy",
            "src": "contracts/OrphiProxy.sol:11"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/SecurityLibrary.sol:SecurityLibrary": {
        "src": "contracts/SecurityLibrary.sol:8",
        "version": {
          "withMetadata": "243bb8349ad7ae39ad5089331959d30827305bfd880386d399511594faeb3121",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/TestContract.sol:TestContract": {
        "src": "contracts/TestContract.sol:4",
        "version": {
          "withMetadata": "7e9e52ec7f2bbcf7a6d44b0a671a23fa55739a93362a42f2ea411c9ec44dbcb8",
          "withoutMetadata": "e2378ce0d43290d5fbbe012e45eb593f2f7d52a7f4bd9569359308c51fb78ca2",
          "linkedWithoutMetadata": "e2378ce0d43290d5fbbe012e45eb593f2f7d52a7f4bd9569359308c51fb78ca2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/TestContract.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "TestContract",
              "src": "contracts/TestContract.sol:5"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/core/OrphiCommissions.sol:OrphiCommissions": {
        "src": "contracts/core/OrphiCommissions.sol:15",
        "version": {
          "withMetadata": "5234db8a2554beaffc068831a28ff8116c8e05214fd9944b95f0e7f89e5bc12a",
          "withoutMetadata": "d172e4eada22de5b1cbd078e5d229b8d754f690ac45b5248605bcb20cbb58396",
          "linkedWithoutMetadata": "d172e4eada22de5b1cbd078e5d229b8d754f690ac45b5248605bcb20cbb58396"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/libraries/CommissionLibrary.sol:CommissionLibrary"
        ],
        "methods": [
          "(address,address,address)",
          "setMatrixContract(address)",
          "setPoolContract(address)",
          "setCommissionTier((uint256,uint256,uint256,uint256,uint256))",
          "registerUser(address,address,uint256,uint256)",
          "distributeCommissions(address,uint256)",
          "getTotalUserEarnings(address)",
          "getUserCommissionInfo(address)",
          "getWithdrawalRate(address)",
          "emergencyWithdraw(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiCommissions",
            "src": "contracts/core/OrphiCommissions.sol:120"
          },
          {
            "kind": "state-variable-assignment",
            "name": "LEVEL_PERCENTAGES",
            "src": "contracts/core/OrphiCommissions.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "defaultTier",
            "src": "contracts/core/OrphiCommissions.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "LEVEL_PERCENTAGES",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)10_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:44"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)2842",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:47"
            },
            {
              "label": "adminReserve",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:48"
            },
            {
              "label": "matrixContract",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:49"
            },
            {
              "label": "poolContract",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:50"
            },
            {
              "label": "defaultTier",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(CommissionTier)9124_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:52"
            },
            {
              "label": "userCommissions",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_struct(UserCommissions)9143_storage)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:61"
            },
            {
              "label": "userSponsor",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:62"
            },
            {
              "label": "userPackageLevel",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:63"
            },
            {
              "label": "userDirectSponsors",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserCommissions)9143_storage)": {
              "label": "mapping(address => struct OrphiCommissions.UserCommissions)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(CommissionTier)9124_storage": {
              "label": "struct OrphiCommissions.CommissionTier",
              "members": [
                {
                  "label": "sponsorRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "levelBonusRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "uplineRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "leaderRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "helpPoolRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserCommissions)9143_storage": {
              "label": "struct OrphiCommissions.UserCommissions",
              "members": [
                {
                  "label": "totalSponsorEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalLevelEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUplineEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalLeaderEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalHelpPoolEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isCapped",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/interfaces/IOrphiCrowdFund.sol:IOrphiCrowdFund": {
        "src": "contracts/interfaces/IOrphiCrowdFund.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proposeUpgrade(address)",
          "executeUpgrade(bytes32)",
          "cancelUpgrade(bytes32)",
          "setupUpgradeMultiSig(address[],uint256)",
          "signUpgrade(bytes32)",
          "register(address,uint8)",
          "contribute(address,uint8)",
          "BASIS_POINTS()",
          "UPGRADE_DELAY()",
          "POOL_MANAGER_ROLE()",
          "EMERGENCY_ROLE()",
          "UPGRADER_ROLE()",
          "ADMIN_ROLE()",
          "PAUSER_ROLE()",
          "getPendingUpgrades()",
          "getUpgradeProposal(bytes32)",
          "getUserEarnings(address)",
          "globalHelpPoolBalance()",
          "constants()",
          "getBasisPoints()",
          "getProxyAdmin()",
          "getImplementation()",
          "getLeaderInfo(address)",
          "getNodeInfo(address)",
          "getAdvancedCompensationInfo(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdminFunctions.sol:AdminFunctions": {
        "src": "contracts/libraries/AdminFunctions.sol:12",
        "version": {
          "withMetadata": "26a75a7b8ff73af0ab0ea0cc62c2aac00824562e9677ed53169e21e9e268b8f3",
          "withoutMetadata": "405647ba9e37b0698f16f89a9c4d259b1dfd74588be1a4377c4f15ebd345ed5a",
          "linkedWithoutMetadata": "405647ba9e37b0698f16f89a9c4d259b1dfd74588be1a4377c4f15ebd345ed5a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [
          "addPackage(mapping(uint256 => struct DataStructures.Package) storage,uint256,uint128,uint128,uint32,bool,uint128)",
          "distributeManualBonus(mapping(address => struct DataStructures.User) storage,address,uint256,string,address)",
          "emergencyWithdraw(address,uint256,address)",
          "recoverToken(address,uint256,address,address)",
          "updateBlacklist(mapping(address => struct DataStructures.User) storage,address,bool,string)",
          "updateOracle(address,address)",
          "setOraclePrice(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdminOperations.sol:AdminOperations": {
        "src": "contracts/libraries/AdminOperations.sol:11",
        "version": {
          "withMetadata": "ca3e007476587567a37298cbcb9f3f5cfd91634b43ae8be80175b3d8f29fd1e1",
          "withoutMetadata": "9bafd103521892b9b3a84d44467e16faf66fe2cee26dd559371caee42f8d40bb",
          "linkedWithoutMetadata": "9bafd103521892b9b3a84d44467e16faf66fe2cee26dd559371caee42f8d40bb"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataTypes.sol:DataTypes"
        ],
        "methods": [
          "blacklistUser(mapping(address => struct DataTypes.User) storage,address,string)",
          "unblacklistUser(mapping(address => struct DataTypes.User) storage,address,string)",
          "setEarningsCap(mapping(address => struct DataTypes.User) storage,address,uint256)",
          "changeSponsor(mapping(address => struct DataTypes.User) storage,address,address)",
          "distributeManualBonus(mapping(address => struct DataTypes.User) storage,address,uint256,string)",
          "distributeGlobalUplineBonus(mapping(address => struct DataTypes.User) storage,mapping(address => mapping(uint256 => address)) storage,address,uint256,uint256,uint256,uint256)",
          "distributeBonuses(mapping(address => struct DataTypes.User) storage,mapping(uint256 => uint256) storage,address,uint256,uint256,uint256)",
          "updatePools(uint256,uint256,uint256,uint256,uint256)",
          "emergencyWithdraw(address,address,uint256)",
          "recoverTokens(address,address,uint256)",
          "getUserPoolEligibility(mapping(address => struct DataTypes.User) storage,address)",
          "registerRootUser(mapping(address => struct DataTypes.User) storage,mapping(uint8 => uint256) storage,address,uint8,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/AdvancedCompensationLogic.sol:AdvancedCompensationLogic": {
        "src": "contracts/libraries/AdvancedCompensationLogic.sol:8",
        "version": {
          "withMetadata": "968888e444aec9181ddefc40d838bc7007d077521e434d207f2fe320d799c700",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/BinaryMatrix.sol:BinaryMatrix": {
        "src": "contracts/libraries/BinaryMatrix.sol:10",
        "version": {
          "withMetadata": "a06d04cb0757b1b4f59f765ed9f205be1090115fdc12b44e5cb19e7d0e3d2325",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLib.sol:CommissionLib": {
        "src": "contracts/libraries/CommissionLib.sol:10",
        "version": {
          "withMetadata": "d68e94ca510b1bd74d262e16ca280638a00aaba04696fd06bd616e129dbf218d",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UserStorage.sol:UserStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLibrary.sol:CommissionLibrary": {
        "src": "contracts/libraries/CommissionLibrary.sol:8",
        "version": {
          "withMetadata": "966c333650fe0524df7b78a82f84a9b0b667e9087077c68d9e24bf5f8a671897",
          "withoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5",
          "linkedWithoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CompensationLogic.sol:CompensationLogic": {
        "src": "contracts/libraries/CompensationLogic.sol:10",
        "version": {
          "withMetadata": "e269221b2cfa78680bd55f37f118ed68637a02a20a5884fe4dcbb2e8244c90ce",
          "withoutMetadata": "3d8cf3edf06d3c86341588b416001b462c426f93d803016394dc24e59a34fa63",
          "linkedWithoutMetadata": "3d8cf3edf06d3c86341588b416001b462c426f93d803016394dc24e59a34fa63"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ConstantsLib.sol:ConstantsLib": {
        "src": "contracts/libraries/ConstantsLib.sol:8",
        "version": {
          "withMetadata": "ea335ba90fef196269a78d1e3fae04f330d335a75b55aff2314d62a2898a195a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ContributionLogic.sol:ContributionLogic": {
        "src": "contracts/libraries/ContributionLogic.sol:12",
        "version": {
          "withMetadata": "aaab954fe189431a42a616c460caecaeed8c7b48f64a2cbfa9c4a639be3979de",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/ConstantsLib.sol:ConstantsLib",
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ContributionLogic.sol:IERC20Decimals": {
        "src": "contracts/libraries/ContributionLogic.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/DataStructures.sol:DataStructures": {
        "src": "contracts/libraries/DataStructures.sol:8",
        "version": {
          "withMetadata": "7614bdb5d120598456a7a0c3191a9711d34dcb698cac9099a5614ff086b162bf",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/DataTypes.sol:DataTypes": {
        "src": "contracts/libraries/DataTypes.sol:8",
        "version": {
          "withMetadata": "085738842464e4c58c4883cb99f085595f0fcd0d88ef807d3c0c706bf8d8e682",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/EventsLib.sol:EventsLib": {
        "src": "contracts/libraries/EventsLib.sol:8",
        "version": {
          "withMetadata": "afda0d579dba4861bb1973e6fef1feff6754a0fa5dd78c77e4c7a796416af8a3",
          "withoutMetadata": "0e0864500ef892d9fd6a47f48547dc92e1373ed9a6e7ebb61cebf6eaa8116116",
          "linkedWithoutMetadata": "0e0864500ef892d9fd6a47f48547dc92e1373ed9a6e7ebb61cebf6eaa8116116"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "emitUserRegistered(address,address,uint8)",
          "emitContributionMade(address,uint256,uint8)",
          "emitFundsWithdrawn(address,uint256)",
          "emitBonusDistributed(address,address,uint256,uint8,string)",
          "emitCommissionPaid(address,address,uint256,uint8)",
          "emitMatrixPlacement(address,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/LeaderManagement.sol:LeaderManagement": {
        "src": "contracts/libraries/LeaderManagement.sol:8",
        "version": {
          "withMetadata": "58ff725ac0e6ec8167d68bf51a9dc9a60eb60cf4c9bb1a143316126e50ae134d",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/MatrixLib.sol:MatrixLib": {
        "src": "contracts/libraries/MatrixLib.sol:11",
        "version": {
          "withMetadata": "8a7eeb8d478e60e816f10c23d251b4add1df2dfa8f6b87f2e19f949660c1b146",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UserStorage.sol:UserStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/NetworkAnalytics.sol:NetworkAnalytics": {
        "src": "contracts/libraries/NetworkAnalytics.sol:8",
        "version": {
          "withMetadata": "552fb44202857093862b5d712fa06f321527e38571a3416703e69cbeb25ad5b8",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OracleLib.sol:IPriceOracleMinimal": {
        "src": "contracts/libraries/OracleLib.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/OracleLib.sol:OracleLib": {
        "src": "contracts/libraries/OracleLib.sol:8",
        "version": {
          "withMetadata": "198d02233c82552c9ab5e4646ecaffbb68c52d260a6ac0fc263c50528bad0e84",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/ReferralLib.sol:ReferralLib": {
        "src": "contracts/libraries/ReferralLib.sol:4",
        "version": {
          "withMetadata": "ef86d669815b593f78166ef485b789528f280a4fa2d5364f36d7806624b201cf",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagement.sol:UserManagementLib": {
        "src": "contracts/libraries/UserManagement.sol:7",
        "version": {
          "withMetadata": "18130715f08af8687d94303aac76282acc84f9d49f5305143e09cf030f90829d",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagementLib.sol:UserManagementLib": {
        "src": "contracts/libraries/UserManagementLib.sol:7",
        "version": {
          "withMetadata": "117f8c093167bbe3379ed291bcbedf6308e165112a2405860d965eb41c471abd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserManagementOperations.sol:UserManagementOperations": {
        "src": "contracts/libraries/UserManagementOperations.sol:10",
        "version": {
          "withMetadata": "e1629958485c6a12bb9f5adbde2e1fd091588359e90e36b62daa6c8c99b79f87",
          "withoutMetadata": "3e37b24fd51e71eae2cb053538360b12257dc27738ae82e4c353490fe0e762d6",
          "linkedWithoutMetadata": "3e37b24fd51e71eae2cb053538360b12257dc27738ae82e4c353490fe0e762d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUser(mapping(address => struct DataTypes.User) storage,address)",
          "getUserBonuses(mapping(address => struct DataTypes.User) storage,address)",
          "getUserMatrix(mapping(address => struct DataTypes.User) storage,address)",
          "registerFreeAdminUser(mapping(address => struct DataTypes.User) storage,mapping(uint256 => address) storage,address[] storage,address,address,uint256,uint8)",
          "initializeLevelBonuses(mapping(uint256 => uint256) storage)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserOperations.sol:UserOperations": {
        "src": "contracts/libraries/UserOperations.sol:11",
        "version": {
          "withMetadata": "612f6995bb84c6807705d840a90f014830b1a86a349f44baeea8c7e890bceaa4",
          "withoutMetadata": "92d7da243343955e8e6afe3bd45f78754a5c96df5e9a472288127ae77403b20b",
          "linkedWithoutMetadata": "92d7da243343955e8e6afe3bd45f78754a5c96df5e9a472288127ae77403b20b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUserInfo(mapping(address => struct DataStructures.User) storage,address)",
          "getUserMatrix(mapping(address => struct DataStructures.User) storage,mapping(address => address[]) storage,address)",
          "getUserEarnings(mapping(address => struct DataStructures.User) storage,address)",
          "updateUserInvestment(mapping(address => struct DataStructures.User) storage,address,uint256,uint8)",
          "addEarnings(mapping(address => struct DataStructures.User) storage,address,uint256)",
          "processWithdrawal(mapping(address => struct DataStructures.User) storage,address,uint256)",
          "updateMatrixPosition(mapping(address => struct DataStructures.User) storage,address,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/UserStorage.sol:UserStorage": {
        "src": "contracts/libraries/UserStorage.sol:8",
        "version": {
          "withMetadata": "ac11867f64331a64d8760ffb4f30238ce20dd9bfd4bf11f8415badb551efa1c9",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/WithdrawalLogic.sol:WithdrawalLogic": {
        "src": "contracts/libraries/WithdrawalLogic.sol:8",
        "version": {
          "withMetadata": "22482dd3e97d15178767d16bb46435e270ad3f4119404a1462e6be7583519e3e",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/ConstantsLib.sol:ConstantsLib",
          "contracts/libraries/DataStructures.sol:DataStructures"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/modules/InternalAdminManager.sol:InternalAdminManager": {
        "src": "contracts/modules/InternalAdminManager.sol:19",
        "version": {
          "withMetadata": "31b4c8537ac217bd8a0498e6ee2085cda53557672952bdacb4da21fc8bea7556",
          "withoutMetadata": "f4901c6228d177dd910dc9b9159c939bd1d8c6ea16489be488a8fd7522865979",
          "linkedWithoutMetadata": "f4901c6228d177dd910dc9b9159c939bd1d8c6ea16489be488a8fd7522865979"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "addInternalAdmin(address)",
          "removeInternalAdmin(address)",
          "replaceInternalAdmin(address,address)",
          "bulkAddInternalAdmins(address[])",
          "trackAdminActivity(address,string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()",
          "getInternalAdminAt(uint256)",
          "checkIsInternalAdmin(address)",
          "getAdminStats(address)",
          "getAdminManagerInfo()",
          "updateEmergencyAdmin(address)",
          "updateOrphiContract(address)",
          "emergencyPause()",
          "emergencyUnpause()",
          "emergencyClearAllAdmins()",
          "validateInternalAdmin(address)",
          "getRandomInternalAdmin()",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "internalAdmins",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:36"
            },
            {
              "label": "isInternalAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:39"
            },
            {
              "label": "adminIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:42"
            },
            {
              "label": "orphiContract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:45"
            },
            {
              "label": "emergencyAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:48"
            },
            {
              "label": "lastAdminUpdate",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:51"
            },
            {
              "label": "adminLastActivity",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:54"
            },
            {
              "label": "adminActionCount",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      }
    }
  ]
}