{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "641770333f7f8952cd6e043ef8574fa5063d093d8c8e585eb9ae4c53c1a158a9",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "bd026613d58a5896a876068466056dbffb12b659629f3f690b7e5d7c41764206",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "2049fa47c125cf6ef13f586fd9981322cacf7f38eb94ead94443454ee4911c75",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "659130c988470104277b4c2bbe45c0a05f95a021cfbae33c5e6a39d73934ba73",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "f4b0e85f57067cc9a40a054ffd2e828dd71cdb37939ac6ee5171365430eaaf46",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:AutomationCompatibleInterface": {
        "src": "contracts/MockInterfaces.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:IERC20": {
        "src": "contracts/MockInterfaces.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Ownable": {
        "src": "contracts/MockInterfaces.sol:31",
        "version": {
          "withMetadata": "549d0005f407bb41941b0bf121db90937e4314b1b3ee3f39ab607c5fbd1fca41",
          "withoutMetadata": "ba2044e64422013a00515f3948e9da16c7192f1a161a3843e0ce478edb723e3f",
          "linkedWithoutMetadata": "ba2044e64422013a00515f3948e9da16c7192f1a161a3843e0ce478edb723e3f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/MockInterfaces.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/MockInterfaces.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Pausable": {
        "src": "contracts/MockInterfaces.sol:65",
        "version": {
          "withMetadata": "dceb3c0f39a2f068540c0b0b6960147674f4c0387119654b4524a9acaf4eac89",
          "withoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5",
          "linkedWithoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/MockInterfaces.sol:66"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:ReentrancyGuard": {
        "src": "contracts/MockInterfaces.sol:48",
        "version": {
          "withMetadata": "7a69eb1ffd5fe05128347eac2ce505078870437c30d66b2af9312f9a892800a3",
          "withoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd",
          "linkedWithoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/MockInterfaces.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/MockInterfaces.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:SafeERC20": {
        "src": "contracts/MockInterfaces.sol:20",
        "version": {
          "withMetadata": "be95ed0953cce07ad2a2043bf103de54e47933e7b31594c8a29cb6bb8adf4695",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:IPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:MockPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:10",
        "version": {
          "withMetadata": "a80301e7760dcb72ad1709e314d0fd87db9d32aabd7370786d16bde549b14ea3",
          "withoutMetadata": "45a51397415a50857dbdc46db92facec9de6bca91eb344553ce9e7548c40de52",
          "linkedWithoutMetadata": "45a51397415a50857dbdc46db92facec9de6bca91eb344553ce9e7548c40de52"
        },
        "inherit": [
          "contracts/MockPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPrice(address)",
          "isHealthy()",
          "setPrice(uint256)",
          "setHealthy(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockPriceOracle",
            "src": "contracts/MockPriceOracle.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:11"
            },
            {
              "label": "healthy",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockUSDT.sol:MockUSDT": {
        "src": "contracts/MockUSDT.sol:12",
        "version": {
          "withMetadata": "7fde70030dcd8a5bdf0384da78d199e594d1cca12523a243b9a8165c8d116b64",
          "withoutMetadata": "63c8003c19d5f719a5dcf558d92ce35daa9da807743417f2d71436d26531bea5",
          "linkedWithoutMetadata": "63c8003c19d5f719a5dcf558d92ce35daa9da807743417f2d71436d26531bea5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)",
          "burn(uint256)",
          "faucet(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockUSDT",
            "src": "contracts/MockUSDT.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockUSDT",
              "src": "contracts/MockUSDT.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:IERC20": {
        "src": "contracts/OrphiCrowdFund.sol:106",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:IInternalAdminManager": {
        "src": "contracts/OrphiCrowdFund.sol:130",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkIsInternalAdmin(address)",
          "validateInternalAdmin(address)",
          "trackAdminActivity(address,string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:IPriceOracle": {
        "src": "contracts/OrphiCrowdFund.sol:121",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()",
          "getLastUpdateTime()",
          "getPriceWithTimestamp(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:OrphiCrowdFund": {
        "src": "contracts/OrphiCrowdFund.sol:139",
        "version": {
          "withMetadata": "45bfea3e59ad22c3eb1c66fa62c56b93b8105a2281169e6882a2325e56809909",
          "withoutMetadata": "65e8e0755e4552098d9326496b558b074df138788e5377c4be735f58ab7f9396",
          "linkedWithoutMetadata": "65e8e0755e4552098d9326496b558b074df138788e5377c4be735f58ab7f9396"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)",
          "registerUser(address,uint8)",
          "withdraw(uint256)",
          "distributeGlobalHelpPool(uint256)",
          "distributeGlobalHelpPool()",
          "distributeLeaderBonus(uint256)",
          "distributeLeaderBonus()",
          "checkRankAdvancement(address)",
          "upgradePackage(uint8)",
          "setPriceOracle(address)",
          "setOracleEnabled(bool)",
          "getCurrentUSDTPrice()",
          "setCircuitBreakerConfig(bool,uint256,uint256)",
          "triggerCircuitBreaker()",
          "getUserInfo(address)",
          "getPoolEarnings(address)",
          "getDirectReferrals(address)",
          "getUplineChain(address)",
          "getMatrixChildren(address)",
          "getWithdrawalRate(address)",
          "isUserRegistered(address)",
          "getDistributionStatus()",
          "getCircuitBreakerStatus()",
          "getPackageAmounts()",
          "getLevelBonusRates()",
          "updateAdminAddresses(address,address,address)",
          "emergencyWithdraw(uint256)",
          "emergencyPause()",
          "emergencyUnpause()",
          "setInternalAdminManager(address)",
          "initializeInternalAdminManager(address,bool)",
          "setInternalAdminEnabled(bool)",
          "isInternalAdmin(address)",
          "validateInternalAdminAccess(address)",
          "trackAdminActivity(string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()",
          "getInternalAdminConfig()",
          "pause()",
          "unpause()",
          "version()",
          "proposeUpgrade(address)",
          "cancelUpgrade(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "storageLayoutHash",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:144"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(User)4376_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:216"
            },
            {
              "label": "userIdToAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:218"
            },
            {
              "label": "directReferrals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:218"
            },
            {
              "label": "uplineChain",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_address)30_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:221"
            },
            {
              "label": "totalUsers",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:224"
            },
            {
              "label": "totalVolume",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:225"
            },
            {
              "label": "poolBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)5_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:225"
            },
            {
              "label": "globalHelpPoolBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:226"
            },
            {
              "label": "leaderBonusPoolBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:228"
            },
            {
              "label": "lastGlobalHelpPoolDistribution",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:229"
            },
            {
              "label": "lastLeaderBonusDistribution",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:230"
            },
            {
              "label": "weeklyDistributionCount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:231"
            },
            {
              "label": "totalDistributedAmount",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:231"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IERC20)4212",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:234"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(IPriceOracle)4240",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:234"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:235"
            },
            {
              "label": "emergencyAddress",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:237"
            },
            {
              "label": "poolManagerAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:238"
            },
            {
              "label": "internalAdminManager",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:239"
            },
            {
              "label": "internalAdminEnabled",
              "offset": 20,
              "slot": "23",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:241"
            },
            {
              "label": "packageAmounts",
              "offset": 0,
              "slot": "24",
              "type": "t_array(t_uint256)4_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:244"
            },
            {
              "label": "levelBonusRates",
              "offset": 0,
              "slot": "28",
              "type": "t_array(t_uint256)10_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:261"
            },
            {
              "label": "platformFeeRate",
              "offset": 0,
              "slot": "38",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:294"
            },
            {
              "label": "oracleEnabled",
              "offset": 0,
              "slot": "39",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:300"
            },
            {
              "label": "maxPriceAge",
              "offset": 0,
              "slot": "40",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:301"
            },
            {
              "label": "priceDeviationThreshold",
              "offset": 0,
              "slot": "41",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:302"
            },
            {
              "label": "circuitBreakerEnabled",
              "offset": 0,
              "slot": "42",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:306"
            },
            {
              "label": "maxDailyWithdrawals",
              "offset": 0,
              "slot": "43",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:307"
            },
            {
              "label": "currentDayWithdrawals",
              "offset": 0,
              "slot": "44",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:308"
            },
            {
              "label": "lastWithdrawalResetTime",
              "offset": 0,
              "slot": "45",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:309"
            },
            {
              "label": "emergencyPauseThreshold",
              "offset": 0,
              "slot": "46",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:310"
            },
            {
              "label": "lastTransactionBlock",
              "offset": 0,
              "slot": "47",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:314"
            },
            {
              "label": "proposedUpgrades",
              "offset": 0,
              "slot": "48",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:322"
            },
            {
              "label": "ghpDistributionIndex",
              "offset": 0,
              "slot": "49",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:919"
            },
            {
              "label": "leaderDistributionIndex",
              "offset": 0,
              "slot": "50",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:920"
            },
            {
              "label": "ghpDistributionInProgress",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:921"
            },
            {
              "label": "leaderDistributionInProgress",
              "offset": 1,
              "slot": "51",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:921"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)30_storage": {
              "label": "address[30]",
              "numberOfBytes": "960"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint128)5_storage": {
              "label": "uint128[5]",
              "numberOfBytes": "96"
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_contract(IERC20)4212": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)4240": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_address)30_storage)": {
              "label": "mapping(address => address[30])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)4376_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(User)4376_storage": {
              "label": "struct OrphiCrowdFund.User",
              "members": [
                {
                  "label": "totalInvested",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "teamSize",
                  "type": "t_uint32",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "lastActivity",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "0"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "packageTierValue",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "leaderRankValue",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "directReferrals",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "2"
                },
                {
                  "label": "isCapped",
                  "type": "t_bool",
                  "offset": 16,
                  "slot": "2"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 17,
                  "slot": "2"
                },
                {
                  "label": "sponsor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "leftChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rightChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "poolEarnings",
                  "type": "t_array(t_uint128)5_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currentLevel",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "leftLegCount",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "9"
                },
                {
                  "label": "rightLegCount",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "9"
                },
                {
                  "label": "weeklyHelpPoolShares",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "9"
                },
                {
                  "label": "totalWithdrawn",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "9"
                },
                {
                  "label": "lastWithdrawal",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "withdrawalCount",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "10"
                },
                {
                  "label": "reinvestmentPercentage",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFundSimplified.sol:IERC20": {
        "src": "contracts/OrphiCrowdFundSimplified.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFundSimplified.sol:OrphiCrowdFundSimplified": {
        "src": "contracts/OrphiCrowdFundSimplified.sol:27",
        "version": {
          "withMetadata": "f68c2ecb3d6a26264d1ce6b2e827cde2810b790383cb7f4877774df6d4fc22ae",
          "withoutMetadata": "faf20784d68af4e669d8dc3d23be7d658df3ee9729cbb4720d7e5eb023f4bd1b",
          "linkedWithoutMetadata": "faf20784d68af4e669d8dc3d23be7d658df3ee9729cbb4720d7e5eb023f4bd1b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,bool,bool,bool)",
          "register(address)",
          "purchasePackage(uint256,address)",
          "withdraw()",
          "pause()",
          "unpause()",
          "setMEVProtection(bool)",
          "setCircuitBreaker(bool)",
          "emergencyWithdraw(address,uint256)",
          "getUserInfo(address)",
          "getPackageAmounts()",
          "isUserRegistered(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "users",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(User)8488_storage)",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:55"
            },
            {
              "label": "lastActionBlock",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:56"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)8450",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:58"
            },
            {
              "label": "totalUsers",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:59"
            },
            {
              "label": "packageAmounts",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint256)4_storage",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:62"
            },
            {
              "label": "mevProtectionEnabled",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:65"
            },
            {
              "label": "circuitBreakerEnabled",
              "offset": 1,
              "slot": "8",
              "type": "t_bool",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:66"
            },
            {
              "label": "timelockEnabled",
              "offset": 2,
              "slot": "8",
              "type": "t_bool",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:67"
            },
            {
              "label": "maxDailyWithdrawals",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:70"
            },
            {
              "label": "currentDayWithdrawals",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:71"
            },
            {
              "label": "lastWithdrawalResetTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:72"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_contract(IERC20)8450": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(User)8488_storage)": {
              "label": "mapping(address => struct OrphiCrowdFundSimplified.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(User)8488_storage": {
              "label": "struct OrphiCrowdFundSimplified.User",
              "members": [
                {
                  "label": "isRegistered",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sponsor",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "packageCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lastWithdrawal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/SecurityLibrary.sol:SecurityLibrary": {
        "src": "contracts/SecurityLibrary.sol:8",
        "version": {
          "withMetadata": "a05b3e551a825138e9bd8291b07119062ad88cec635a110c1f48092ad3a9f5ef",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/core/OrphiCommissions.sol:OrphiCommissions": {
        "src": "contracts/core/OrphiCommissions.sol:15",
        "version": {
          "withMetadata": "5191db9da0c2c4d9477e29ca0c0cbc30f5dfad85916d7ac42fa4962c8149d8da",
          "withoutMetadata": "5d2a6a69921dc2eeb771b6d24260b417fc3a3197e19dc5980787417f97d46261",
          "linkedWithoutMetadata": "5d2a6a69921dc2eeb771b6d24260b417fc3a3197e19dc5980787417f97d46261"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/libraries/CommissionLibrary.sol:CommissionLibrary"
        ],
        "methods": [
          "(address,address,address)",
          "setMatrixContract(address)",
          "setPoolContract(address)",
          "setCommissionTier((uint256,uint256,uint256,uint256,uint256))",
          "registerUser(address,address,uint256,uint256)",
          "distributeCommissions(address,uint256)",
          "getTotalUserEarnings(address)",
          "getUserCommissionInfo(address)",
          "getWithdrawalRate(address)",
          "emergencyWithdraw(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiCommissions",
            "src": "contracts/core/OrphiCommissions.sol:120"
          },
          {
            "kind": "state-variable-assignment",
            "name": "LEVEL_PERCENTAGES",
            "src": "contracts/core/OrphiCommissions.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "defaultTier",
            "src": "contracts/core/OrphiCommissions.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "LEVEL_PERCENTAGES",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)10_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:44"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)2768",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:47"
            },
            {
              "label": "adminReserve",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:48"
            },
            {
              "label": "matrixContract",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:49"
            },
            {
              "label": "poolContract",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:50"
            },
            {
              "label": "defaultTier",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(CommissionTier)9568_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:52"
            },
            {
              "label": "userCommissions",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_struct(UserCommissions)9587_storage)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:61"
            },
            {
              "label": "userSponsor",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:62"
            },
            {
              "label": "userPackageLevel",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:63"
            },
            {
              "label": "userDirectSponsors",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2768": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserCommissions)9587_storage)": {
              "label": "mapping(address => struct OrphiCommissions.UserCommissions)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(CommissionTier)9568_storage": {
              "label": "struct OrphiCommissions.CommissionTier",
              "members": [
                {
                  "label": "sponsorRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "levelBonusRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "uplineRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "leaderRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "helpPoolRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserCommissions)9587_storage": {
              "label": "struct OrphiCommissions.UserCommissions",
              "members": [
                {
                  "label": "totalSponsorEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalLevelEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUplineEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalLeaderEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalHelpPoolEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isCapped",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLibrary.sol:CommissionLibrary": {
        "src": "contracts/libraries/CommissionLibrary.sol:8",
        "version": {
          "withMetadata": "d0aa63daa3806b74eed18aec69e9084ada77679f8f75f64a54f5b8d6bf55da55",
          "withoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5",
          "linkedWithoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/modules/InternalAdminManager.sol:InternalAdminManager": {
        "src": "contracts/modules/InternalAdminManager.sol:19",
        "version": {
          "withMetadata": "d1b21039bef7e0e9b0aecba8695289cd9699a5f372611063bf594993da955ccd",
          "withoutMetadata": "af1580c3b1652bea39330ecf867f61714fc4c7d698634d3b326d519a3fc9fba4",
          "linkedWithoutMetadata": "af1580c3b1652bea39330ecf867f61714fc4c7d698634d3b326d519a3fc9fba4"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "addInternalAdmin(address)",
          "removeInternalAdmin(address)",
          "replaceInternalAdmin(address,address)",
          "bulkAddInternalAdmins(address[])",
          "trackAdminActivity(address,string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()",
          "getInternalAdminAt(uint256)",
          "checkIsInternalAdmin(address)",
          "getAdminStats(address)",
          "getAdminManagerInfo()",
          "updateEmergencyAdmin(address)",
          "updateOrphiContract(address)",
          "emergencyPause()",
          "emergencyUnpause()",
          "emergencyClearAllAdmins()",
          "validateInternalAdmin(address)",
          "getRandomInternalAdmin()",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "internalAdmins",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:36"
            },
            {
              "label": "isInternalAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:39"
            },
            {
              "label": "adminIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:42"
            },
            {
              "label": "orphiContract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:45"
            },
            {
              "label": "emergencyAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:48"
            },
            {
              "label": "lastAdminUpdate",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:51"
            },
            {
              "label": "adminLastActivity",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:54"
            },
            {
              "label": "adminActionCount",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "c18401848e06bfd9d2dd9f1fb3115d9d928def55ca8781860a810c1494a59f8b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "255f5d1e17870f07c7cd8a1515435e86882e4b615a5c28cdbd2b8afbea1f250b",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "d1d01ca8b4e19122bd36243ed6da536e6e767c0c0400b2502d66b76c10bd4881",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "473d60c0451a5db8c737caf5fa65b6c6bd0f4a946a43fd052a6204a641b40854",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "e85c0d8abaf275d0aed943cf4804f4d1746226744376f5126f3e5378de017d3a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:AutomationCompatibleInterface": {
        "src": "contracts/MockInterfaces.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:IERC20": {
        "src": "contracts/MockInterfaces.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Ownable": {
        "src": "contracts/MockInterfaces.sol:31",
        "version": {
          "withMetadata": "fbb5de62008362e015a705f3d13eaf4862e31b8126432755706b460b876b99d2",
          "withoutMetadata": "18830a6df5b12f2c8aadebf32be2f15ded2764376cc3ca5a5a55177c5a77d05d",
          "linkedWithoutMetadata": "18830a6df5b12f2c8aadebf32be2f15ded2764376cc3ca5a5a55177c5a77d05d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/MockInterfaces.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/MockInterfaces.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:Pausable": {
        "src": "contracts/MockInterfaces.sol:65",
        "version": {
          "withMetadata": "529e5c3687937848d9dbc1f0e1c59b46191a2362a1c69e768a05b890258c2a30",
          "withoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5",
          "linkedWithoutMetadata": "db12cee82c0b61d41a3f406731f32d59d43e3328864896b25d38f32824fd2bb5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/MockInterfaces.sol:66"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:ReentrancyGuard": {
        "src": "contracts/MockInterfaces.sol:48",
        "version": {
          "withMetadata": "313b09533515c1ea07049d8f1c0f9514d3444ac24a529f4937abcc2b99f51647",
          "withoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd",
          "linkedWithoutMetadata": "3877f64209c035f6d0104d20cc666a451f77f482f4aa2070aaa93986a64d93dd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/MockInterfaces.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/MockInterfaces.sol:51"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockInterfaces.sol:SafeERC20": {
        "src": "contracts/MockInterfaces.sol:20",
        "version": {
          "withMetadata": "7a6fb04fa3a28a87bdc80f6e91d22c56443da4fe0c42308a0dfd5d6ce7bd00b8",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:IPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockPriceOracle.sol:MockPriceOracle": {
        "src": "contracts/MockPriceOracle.sol:10",
        "version": {
          "withMetadata": "d5024c7b7a37b1b20606ea813f9d48636eb8c288d9f71c0b638b61460b782d35",
          "withoutMetadata": "88fce1f9b8295f51d879ebfbd8d9a6f738d523db13d3f144c9218783f1e9c47f",
          "linkedWithoutMetadata": "88fce1f9b8295f51d879ebfbd8d9a6f738d523db13d3f144c9218783f1e9c47f"
        },
        "inherit": [
          "contracts/MockPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPrice(address)",
          "isHealthy()",
          "setPrice(uint256)",
          "setHealthy(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockPriceOracle",
            "src": "contracts/MockPriceOracle.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:11"
            },
            {
              "label": "healthy",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MockPriceOracle",
              "src": "contracts/MockPriceOracle.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockUSDT.sol:MockUSDT": {
        "src": "contracts/MockUSDT.sol:12",
        "version": {
          "withMetadata": "d314bda58a6005844ae14be31b1769be53c0883e83087be780edb6d1ef166a10",
          "withoutMetadata": "2ff5d4657ae5ca3c6505f52c55e1c3f8d142ffe9983c4f4e3f1045406cbf90bf",
          "linkedWithoutMetadata": "2ff5d4657ae5ca3c6505f52c55e1c3f8d142ffe9983c4f4e3f1045406cbf90bf"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)",
          "burn(uint256)",
          "faucet(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockUSDT",
            "src": "contracts/MockUSDT.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockUSDT",
              "src": "contracts/MockUSDT.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:IERC20": {
        "src": "contracts/OrphiCrowdFund.sol:106",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:IInternalAdminManager": {
        "src": "contracts/OrphiCrowdFund.sol:130",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkIsInternalAdmin(address)",
          "validateInternalAdmin(address)",
          "trackAdminActivity(address,string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:IPriceOracle": {
        "src": "contracts/OrphiCrowdFund.sol:121",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)",
          "isHealthy()",
          "getLastUpdateTime()",
          "getPriceWithTimestamp(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFund.sol:OrphiCrowdFund": {
        "src": "contracts/OrphiCrowdFund.sol:139",
        "version": {
          "withMetadata": "8b6f36c3ecda7e10f84ddbe73d471358a946a4ac4b192c36b03c8debdc44772f",
          "withoutMetadata": "28d168dd808417614a5ed52617bd796c69e70731fc9c489fb53d598d07454069",
          "linkedWithoutMetadata": "28d168dd808417614a5ed52617bd796c69e70731fc9c489fb53d598d07454069"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)",
          "registerUser(address,uint8)",
          "withdraw(uint256)",
          "distributeGlobalHelpPool(uint256)",
          "distributeGlobalHelpPool()",
          "distributeLeaderBonus(uint256)",
          "distributeLeaderBonus()",
          "checkRankAdvancement(address)",
          "upgradePackage(uint8)",
          "setPriceOracle(address)",
          "setOracleEnabled(bool)",
          "getCurrentUSDTPrice()",
          "setCircuitBreakerConfig(bool,uint256,uint256)",
          "triggerCircuitBreaker()",
          "getUserInfo(address)",
          "getPoolEarnings(address)",
          "getDirectReferrals(address)",
          "getUplineChain(address)",
          "getMatrixChildren(address)",
          "getWithdrawalRate(address)",
          "isUserRegistered(address)",
          "getDistributionStatus()",
          "getCircuitBreakerStatus()",
          "getPackageAmounts()",
          "getLevelBonusRates()",
          "updateAdminAddresses(address,address,address)",
          "emergencyWithdraw(uint256)",
          "emergencyPause()",
          "emergencyUnpause()",
          "setInternalAdminManager(address)",
          "initializeInternalAdminManager(address,bool)",
          "setInternalAdminEnabled(bool)",
          "isInternalAdmin(address)",
          "validateInternalAdminAccess(address)",
          "trackAdminActivity(string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()",
          "getInternalAdminConfig()",
          "pause()",
          "unpause()",
          "version()",
          "proposeUpgrade(address)",
          "cancelUpgrade(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "storageLayoutHash",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:144"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(User)4376_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:216"
            },
            {
              "label": "userIdToAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:218"
            },
            {
              "label": "directReferrals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:218"
            },
            {
              "label": "uplineChain",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_address)30_storage)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:221"
            },
            {
              "label": "totalUsers",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:224"
            },
            {
              "label": "totalVolume",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:225"
            },
            {
              "label": "poolBalances",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)5_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:225"
            },
            {
              "label": "globalHelpPoolBalance",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:226"
            },
            {
              "label": "leaderBonusPoolBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:228"
            },
            {
              "label": "lastGlobalHelpPoolDistribution",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:229"
            },
            {
              "label": "lastLeaderBonusDistribution",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:230"
            },
            {
              "label": "weeklyDistributionCount",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:231"
            },
            {
              "label": "totalDistributedAmount",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:231"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IERC20)4212",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:234"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(IPriceOracle)4240",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:234"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:235"
            },
            {
              "label": "emergencyAddress",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:237"
            },
            {
              "label": "poolManagerAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:238"
            },
            {
              "label": "internalAdminManager",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:239"
            },
            {
              "label": "internalAdminEnabled",
              "offset": 20,
              "slot": "23",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:241"
            },
            {
              "label": "packageAmounts",
              "offset": 0,
              "slot": "24",
              "type": "t_array(t_uint256)4_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:244"
            },
            {
              "label": "levelBonusRates",
              "offset": 0,
              "slot": "28",
              "type": "t_array(t_uint256)10_storage",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:261"
            },
            {
              "label": "platformFeeRate",
              "offset": 0,
              "slot": "38",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:294"
            },
            {
              "label": "oracleEnabled",
              "offset": 0,
              "slot": "39",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:300"
            },
            {
              "label": "maxPriceAge",
              "offset": 0,
              "slot": "40",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:301"
            },
            {
              "label": "priceDeviationThreshold",
              "offset": 0,
              "slot": "41",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:302"
            },
            {
              "label": "circuitBreakerEnabled",
              "offset": 0,
              "slot": "42",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:306"
            },
            {
              "label": "maxDailyWithdrawals",
              "offset": 0,
              "slot": "43",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:307"
            },
            {
              "label": "currentDayWithdrawals",
              "offset": 0,
              "slot": "44",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:308"
            },
            {
              "label": "lastWithdrawalResetTime",
              "offset": 0,
              "slot": "45",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:309"
            },
            {
              "label": "emergencyPauseThreshold",
              "offset": 0,
              "slot": "46",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:310"
            },
            {
              "label": "lastTransactionBlock",
              "offset": 0,
              "slot": "47",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:314"
            },
            {
              "label": "proposedUpgrades",
              "offset": 0,
              "slot": "48",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:322"
            },
            {
              "label": "ghpDistributionIndex",
              "offset": 0,
              "slot": "49",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:919"
            },
            {
              "label": "leaderDistributionIndex",
              "offset": 0,
              "slot": "50",
              "type": "t_uint256",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:920"
            },
            {
              "label": "ghpDistributionInProgress",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:921"
            },
            {
              "label": "leaderDistributionInProgress",
              "offset": 1,
              "slot": "51",
              "type": "t_bool",
              "contract": "OrphiCrowdFund",
              "src": "contracts/OrphiCrowdFund.sol:921"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)30_storage": {
              "label": "address[30]",
              "numberOfBytes": "960"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint128)5_storage": {
              "label": "uint128[5]",
              "numberOfBytes": "96"
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_contract(IERC20)4212": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)4240": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_address)30_storage)": {
              "label": "mapping(address => address[30])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)4376_storage)": {
              "label": "mapping(address => struct OrphiCrowdFund.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(User)4376_storage": {
              "label": "struct OrphiCrowdFund.User",
              "members": [
                {
                  "label": "totalInvested",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "registrationTime",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "teamSize",
                  "type": "t_uint32",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "lastActivity",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "0"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "packageTierValue",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "leaderRankValue",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "directReferrals",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "2"
                },
                {
                  "label": "isCapped",
                  "type": "t_bool",
                  "offset": 16,
                  "slot": "2"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 17,
                  "slot": "2"
                },
                {
                  "label": "sponsor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "leftChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rightChild",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "poolEarnings",
                  "type": "t_array(t_uint128)5_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currentLevel",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "leftLegCount",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "9"
                },
                {
                  "label": "rightLegCount",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "9"
                },
                {
                  "label": "weeklyHelpPoolShares",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "9"
                },
                {
                  "label": "totalWithdrawn",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "9"
                },
                {
                  "label": "lastWithdrawal",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "withdrawalCount",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "10"
                },
                {
                  "label": "reinvestmentPercentage",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFundSimplified.sol:IERC20": {
        "src": "contracts/OrphiCrowdFundSimplified.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OrphiCrowdFundSimplified.sol:OrphiCrowdFundSimplified": {
        "src": "contracts/OrphiCrowdFundSimplified.sol:27",
        "version": {
          "withMetadata": "de23fdd599d6d62ea447603204722a1621f970ba134f1a79277f9f7452f2f33f",
          "withoutMetadata": "9f4210b0c04dee5525a29f40cd74b0808a9be2ea2717f2736efebde9242fd895",
          "linkedWithoutMetadata": "9f4210b0c04dee5525a29f40cd74b0808a9be2ea2717f2736efebde9242fd895"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,bool,bool,bool)",
          "register(address)",
          "purchasePackage(uint256,address)",
          "withdraw()",
          "pause()",
          "unpause()",
          "setMEVProtection(bool)",
          "setCircuitBreaker(bool)",
          "emergencyWithdraw(address,uint256)",
          "getUserInfo(address)",
          "getPackageAmounts()",
          "isUserRegistered(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "users",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(User)8488_storage)",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:55"
            },
            {
              "label": "lastActionBlock",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:56"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)8450",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:58"
            },
            {
              "label": "totalUsers",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:59"
            },
            {
              "label": "packageAmounts",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint256)4_storage",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:62"
            },
            {
              "label": "mevProtectionEnabled",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:65"
            },
            {
              "label": "circuitBreakerEnabled",
              "offset": 1,
              "slot": "8",
              "type": "t_bool",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:66"
            },
            {
              "label": "timelockEnabled",
              "offset": 2,
              "slot": "8",
              "type": "t_bool",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:67"
            },
            {
              "label": "maxDailyWithdrawals",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:70"
            },
            {
              "label": "currentDayWithdrawals",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:71"
            },
            {
              "label": "lastWithdrawalResetTime",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "OrphiCrowdFundSimplified",
              "src": "contracts/OrphiCrowdFundSimplified.sol:72"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)151_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)426_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_contract(IERC20)8450": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(User)8488_storage)": {
              "label": "mapping(address => struct OrphiCrowdFundSimplified.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(User)8488_storage": {
              "label": "struct OrphiCrowdFundSimplified.User",
              "members": [
                {
                  "label": "isRegistered",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sponsor",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalEarnings",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "packageCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lastWithdrawal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "contracts/SecurityLibrary.sol:SecurityLibrary": {
        "src": "contracts/SecurityLibrary.sol:8",
        "version": {
          "withMetadata": "243bb8349ad7ae39ad5089331959d30827305bfd880386d399511594faeb3121",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/core/OrphiCommissions.sol:OrphiCommissions": {
        "src": "contracts/core/OrphiCommissions.sol:15",
        "version": {
          "withMetadata": "5234db8a2554beaffc068831a28ff8116c8e05214fd9944b95f0e7f89e5bc12a",
          "withoutMetadata": "d172e4eada22de5b1cbd078e5d229b8d754f690ac45b5248605bcb20cbb58396",
          "linkedWithoutMetadata": "d172e4eada22de5b1cbd078e5d229b8d754f690ac45b5248605bcb20cbb58396"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/libraries/CommissionLibrary.sol:CommissionLibrary"
        ],
        "methods": [
          "(address,address,address)",
          "setMatrixContract(address)",
          "setPoolContract(address)",
          "setCommissionTier((uint256,uint256,uint256,uint256,uint256))",
          "registerUser(address,address,uint256,uint256)",
          "distributeCommissions(address,uint256)",
          "getTotalUserEarnings(address)",
          "getUserCommissionInfo(address)",
          "getWithdrawalRate(address)",
          "emergencyWithdraw(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OrphiCommissions",
            "src": "contracts/core/OrphiCommissions.sol:120"
          },
          {
            "kind": "state-variable-assignment",
            "name": "LEVEL_PERCENTAGES",
            "src": "contracts/core/OrphiCommissions.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "defaultTier",
            "src": "contracts/core/OrphiCommissions.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "LEVEL_PERCENTAGES",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)10_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:44"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)2768",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:47"
            },
            {
              "label": "adminReserve",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:48"
            },
            {
              "label": "matrixContract",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:49"
            },
            {
              "label": "poolContract",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:50"
            },
            {
              "label": "defaultTier",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(CommissionTier)9568_storage",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:52"
            },
            {
              "label": "userCommissions",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_struct(UserCommissions)9587_storage)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:61"
            },
            {
              "label": "userSponsor",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:62"
            },
            {
              "label": "userPackageLevel",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:63"
            },
            {
              "label": "userDirectSponsors",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "OrphiCommissions",
              "src": "contracts/core/OrphiCommissions.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)2768": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserCommissions)9587_storage)": {
              "label": "mapping(address => struct OrphiCommissions.UserCommissions)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(CommissionTier)9568_storage": {
              "label": "struct OrphiCommissions.CommissionTier",
              "members": [
                {
                  "label": "sponsorRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "levelBonusRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "uplineRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "leaderRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "helpPoolRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserCommissions)9587_storage": {
              "label": "struct OrphiCommissions.UserCommissions",
              "members": [
                {
                  "label": "totalSponsorEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalLevelEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUplineEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalLeaderEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalHelpPoolEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawableAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isCapped",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalInvested",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "earningsCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/libraries/CommissionLibrary.sol:CommissionLibrary": {
        "src": "contracts/libraries/CommissionLibrary.sol:8",
        "version": {
          "withMetadata": "966c333650fe0524df7b78a82f84a9b0b667e9087077c68d9e24bf5f8a671897",
          "withoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5",
          "linkedWithoutMetadata": "9a6fc3e081f4e58c254bbeeba8ec610734af3d0d0d368814fbb1af139da073f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/modules/InternalAdminManager.sol:InternalAdminManager": {
        "src": "contracts/modules/InternalAdminManager.sol:19",
        "version": {
          "withMetadata": "31b4c8537ac217bd8a0498e6ee2085cda53557672952bdacb4da21fc8bea7556",
          "withoutMetadata": "f4901c6228d177dd910dc9b9159c939bd1d8c6ea16489be488a8fd7522865979",
          "linkedWithoutMetadata": "f4901c6228d177dd910dc9b9159c939bd1d8c6ea16489be488a8fd7522865979"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "addInternalAdmin(address)",
          "removeInternalAdmin(address)",
          "replaceInternalAdmin(address,address)",
          "bulkAddInternalAdmins(address[])",
          "trackAdminActivity(address,string)",
          "getAllInternalAdmins()",
          "getInternalAdminCount()",
          "getInternalAdminAt(uint256)",
          "checkIsInternalAdmin(address)",
          "getAdminStats(address)",
          "getAdminManagerInfo()",
          "updateEmergencyAdmin(address)",
          "updateOrphiContract(address)",
          "emergencyPause()",
          "emergencyUnpause()",
          "emergencyClearAllAdmins()",
          "validateInternalAdmin(address)",
          "getRandomInternalAdmin()",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "internalAdmins",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:36"
            },
            {
              "label": "isInternalAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:39"
            },
            {
              "label": "adminIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:42"
            },
            {
              "label": "orphiContract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:45"
            },
            {
              "label": "emergencyAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:48"
            },
            {
              "label": "lastAdminUpdate",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:51"
            },
            {
              "label": "adminLastActivity",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:54"
            },
            {
              "label": "adminActionCount",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InternalAdminManager",
              "src": "contracts/modules/InternalAdminManager.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)211_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)362_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      }
    }
  ]
}