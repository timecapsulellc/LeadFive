src/App-debug.jsx:4:  console.log('DebugApp: Component rendering');
src/App-debug.jsx:54:    console.log('DebugApp: Attempting to import Dashboard...');
src/App-debug.jsx:58:        console.log('DebugApp: Dashboard import successful');
src/App-debug.jsx:63:        console.error('DebugApp: Dashboard import error:', error);
src/contexts/Web3Context.jsx:47:        console.log('‚úÖ Fallback provider initialized');
src/contexts/Web3Context.jsx:49:        console.error('‚ùå Failed to initialize fallback provider:', error);
src/contexts/Web3Context.jsx:83:      console.error('Error connecting wallet:', error);
src/contexts/Web3Context.jsx:158:          console.error('Error checking connection:', error);
src/main-original.jsx:13:console.log('üöÄ Initializing LeadFive with AI Services...')
src/config/rootUser.js:89:      console.warn('Error looking up referral code:', code, error);
src/ErrorBoundary.jsx:19:    console.error("üö® ErrorBoundary caught error:", error, errorInfo);
src/ErrorBoundary.jsx:25:    console.log('üõ°Ô∏è ErrorBoundary render - hasError:', this.state.hasError);
src/ErrorBoundary.jsx:28:      console.log('‚ùå ErrorBoundary showing fallback UI');
src/ErrorBoundary.jsx:48:    console.log('‚úÖ ErrorBoundary rendering children');
src/polyfills.js:35:console.log('‚úÖ Polyfills loaded successfully');
src/stores/dashboardStore.js:103:      console.log('üöÄ Starting dashboard store initialization...', { account, provider: !!provider });
src/stores/dashboardStore.js:123:          console.log('üì° Initializing API services...');
src/stores/dashboardStore.js:136:              console.warn(`‚ö†Ô∏è ${apiName} initialization failed:`, result.reason);
src/stores/dashboardStore.js:138:              console.log(`‚úÖ ${apiName} initialized successfully`);
src/stores/dashboardStore.js:142:          console.log('üìä Loading initial data...');
src/stores/dashboardStore.js:146:            console.log('‚úÖ Initial data loaded successfully');
src/stores/dashboardStore.js:148:            console.warn('‚ö†Ô∏è Initial data loading failed, using fallback:', dataError);
src/stores/dashboardStore.js:164:        console.log('üéâ Dashboard store initialization complete - loading cleared');
src/stores/dashboardStore.js:167:        console.error('‚ùå Dashboard store initialization failed:', error);
src/stores/dashboardStore.js:175:        console.log('üîÑ Dashboard will use fallback data due to initialization error');
src/stores/dashboardStore.js:185:      console.log('üìä Starting to load all dashboard data...');
src/stores/dashboardStore.js:198:            console.warn(`‚ö†Ô∏è ${dataType} data loading failed:`, result.reason);
src/stores/dashboardStore.js:200:            console.log(`‚úÖ ${dataType} data loaded successfully`);
src/stores/dashboardStore.js:204:        console.log('üìä All data loading completed');
src/stores/dashboardStore.js:206:        console.error('‚ùå Error in loadAllData:', error);
src/stores/dashboardStore.js:243:        console.log('Dashboard data loaded successfully');
src/stores/dashboardStore.js:246:        console.error('Error loading dashboard data:', error);
src/stores/dashboardStore.js:282:        console.log('Earnings data loaded successfully');
src/stores/dashboardStore.js:285:        console.error('Error loading earnings data:', error);
src/stores/dashboardStore.js:319:        console.log('Referral data loaded successfully');
src/stores/dashboardStore.js:322:        console.error('Error loading referral data:', error);
src/stores/dashboardStore.js:336:        console.log('Refreshing all dashboard data...');
src/utils/walletSecurity.js:62:      console.error('Wallet provider verification failed:', error);
src/utils/walletSecurity.js:126:      console.error('Provider integrity check failed:', error);
src/utils/walletSecurity.js:231:        console.warn(`Suspicious activity detected for address: ${address}`);
src/utils/walletSecurity.js:255:        console.log(`Session expired for address: ${address}`);
src/utils/walletSecurity.js:353:      console.error('Transaction analysis failed:', error);
src/utils/walletSecurity.js:414:      console.warn('Could not verify recipient address:', error);
src/utils/advancedCaching.js:111:      console.warn('Compression failed, storing uncompressed:', error);
src/utils/advancedCaching.js:124:      console.warn('Decompression failed:', error);
src/utils/advancedCaching.js:376:      console.warn('Failed to save to storage:', error);
src/utils/advancedCaching.js:397:      console.warn('Failed to load from storage:', error);
src/utils/advancedCaching.js:413:      console.warn('Failed to delete from storage:', error);
src/utils/advancedCaching.js:435:      console.warn('Failed to clear storage:', error);
src/utils/performanceOptimization.js:44:        console.error('Failed to load component:', error);
src/utils/performanceOptimization.js:107:      console.log('Component preloaded successfully:', key.slice(0, 50) + '...');
src/utils/performanceOptimization.js:109:      console.warn('Component preload failed:', error);
src/utils/performanceOptimization.js:383:    console.log(`Performance: ${name} took ${end - start} milliseconds`);
src/utils/gasOptimizer.js:36:      console.error(`Gas estimation failed for ${functionName}:`, error);
src/utils/gasOptimizer.js:59:      console.error('Failed to get optimal gas price:', error);
src/utils/gasOptimizer.js:78:      console.log(`Executing ${functionName} with optimized gas:`, {
src/utils/gasOptimizer.js:96:      console.error(`Optimized execution failed for ${functionName}:`, error);
src/utils/gasOptimizer.js:118:      console.log('Transaction monitoring:', monitoringData);
src/utils/gasOptimizer.js:122:      console.error('Transaction monitoring failed:', error);
src/utils/gasOptimizer.js:192:      console.error('Batch transaction failed:', error);
src/utils/gasOptimizer.js:275:      console.error(`Cached call failed for ${functionName}:`, error);
src/utils/securityConfig.js:151:      console.log('üîê Initializing comprehensive security system...');
src/utils/securityConfig.js:175:      console.log('‚úÖ Security system initialized successfully');
src/utils/securityConfig.js:179:      console.error('‚ùå Security initialization failed:', error);
src/utils/securityConfig.js:384:      console.warn('üö® Security audit found issues:', issues);
src/utils/securityConfig.js:397:      console.warn('‚ö†Ô∏è High security performance overhead detected:', securityOverhead);
src/utils/securityConfig.js:422:      console.log('üìä Security Report:', report);
src/utils/securityConfig.js:435:    console.error('üö® CRITICAL SECURITY ERROR:', error);
src/utils/securityConfig.js:453:          console.log(`Blocked IPs detected: ${issue.count}`);
src/utils/securityConfig.js:494:    console.warn('üîí Security lockdown enabled');
src/utils/securityConfig.js:502:    console.warn('üîê Strict security mode enabled');
src/utils/securityConfig.js:529:      console.log('Session timeout triggered');
src/utils/securityConfig.js:565:      console.error('Failed to send security report:', error);
src/utils/securityConfig.js:572:    console.error('SECURITY ALERT:', { error, context });
src/utils/securityConfig.js:588:    console.log('Security configuration updated');
src/utils/errorHandling.js:216:      console.error('Failed to send log batch:', error);
src/utils/errorHandling.js:227:      console.error('Failed to send log:', error);
src/utils/errorHandling.js:509:          console.error('Error boundary notification failed:', boundaryError);
src/utils/performanceMonitor.js:34:        console.warn('Navigation timing not supported');
src/utils/performanceMonitor.js:51:        console.warn('Resource timing not supported');
src/utils/performanceMonitor.js:68:        console.warn('Long task timing not supported');
src/utils/performanceMonitor.js:262:      console.log(`[Performance] ${type}:`, data);
src/utils/bundleAnalysis.js:23:    console.log(`üì¶ Chunk loaded: ${chunkName} (${this.formatBytes(size)}) in ${loadTime}ms`);
src/utils/bundleAnalysis.js:145:        console.warn('LCP observer not supported');
src/utils/bundleAnalysis.js:160:        console.warn('FID observer not supported');
src/utils/bundleAnalysis.js:179:        console.warn('CLS observer not supported');
src/utils/bundleAnalysis.js:200:      console.log(`üìä ${name}: ${value.toFixed(2)}${this.getMetricUnit(name)}`);
src/utils/bundleAnalysis.js:520:  console.log('Bundle Analysis:', bundleReport);
src/utils/bundleAnalysis.js:521:  console.log('Core Web Vitals:', performanceReport.coreWebVitals);
src/utils/bundleAnalysis.js:522:  console.log('Runtime Performance:', runtimeReport);
src/utils/walletPersistence.js:40:    console.error('Error encrypting wallet data:', error);
src/utils/walletPersistence.js:50:    console.error('Error decrypting wallet data:', error);
src/utils/walletPersistence.js:76:    console.error('Error storing wallet connection:', error);
src/utils/walletPersistence.js:114:    console.error('Error retrieving wallet connection:', error);
src/utils/walletPersistence.js:131:    console.error('Error clearing wallet connection:', error);
src/utils/walletPersistence.js:148:    console.error('Error storing wallet preferences:', error);
src/utils/walletPersistence.js:164:    console.error('Error retrieving wallet preferences:', error);
src/utils/walletPersistence.js:204:        console.warn('Network changed since last session');
src/utils/walletPersistence.js:214:      console.error(`Reconnection attempt ${attempts} failed:`, error);
src/utils/walletPersistence.js:242:    console.error('Error extending session:', error);
src/utils/walletPersistence.js:260:    console.error('Error checking session validity:', error);
src/utils/walletPersistence.js:285:    console.error('Error getting session metrics:', error);
src/utils/securityHeaders.js:186:    console.error('Error applying client-side security meta tags:', error);
src/utils/securityHeaders.js:251:    console.error('Error validating security headers:', error);
src/utils/securityHeaders.js:298:    console.log('Mobile security measures initialized');
src/utils/securityHeaders.js:301:    console.error('Error initializing mobile security:', error);
src/utils/securityHeaders.js:320:    console.warn('Security Event:', securityEvent);
src/utils/securityHeaders.js:327:    console.error('Error reporting security event:', error);
src/utils/securityManager.js:51:      console.error('API key encryption failed:', error);
src/utils/securityManager.js:63:      console.error('API key decryption failed:', error);
src/utils/securityManager.js:128:        console.error(`Failed to re-encrypt key for ${service}:`, error);
src/utils/productionMonitor.js:373:      console.warn('Analytics sending failed:', error);
src/utils/contractErrorHandler.js:20:    console.warn(`${errorContext} failed:`, error);
src/utils/contractErrorHandler.js:79:    console.warn('User registration check failed:', error);
src/utils/contractErrorHandler.js:99:    console.warn('Network validation failed:', error);
src/utils/TreeExporter.js:45:      console.error('Export to PNG failed:', error);
src/utils/TreeExporter.js:84:      console.error('Export to PDF failed:', error);
src/utils/TreeExporter.js:105:      console.error('Export data as JSON failed:', error);
src/utils/TreeExporter.js:128:      console.error('Export data as CSV failed:', error);
src/main-wrong-backup.jsx:13:console.log('üöÄ Initializing LeadFive with AI Services...')
src/components/PushNotificationSystem.jsx:98:      audioRef.current.play().catch(e => console.log('Audio play failed:', e));
src/components/UnifiedChatbot.jsx:30:  console.log('[AIRA DEBUG] Enhanced chatbot with PhD-level knowledge initialized');
src/components/UnifiedChatbot.jsx:88:    console.log('[ARIA DEBUG] UnifiedChatbot component mounted successfully');
src/components/UnifiedChatbot.jsx:89:    console.log('[ARIA DEBUG] Props received:', { userStats, account, userInfo, mode, position });
src/components/UnifiedChatbot.jsx:96:    console.log('[ARIA DEBUG] Component fully initialized, current state:', { 
src/components/UnifiedChatbot.jsx:247:      console.error('[AIRA] Error generating response:', error);
src/components/UnifiedChatbot.jsx:347:  console.log('[ARIA DEBUG] About to render ARIA chatbot with personality:', currentPersonalityData.name);
src/components/ProviderHealthMonitor.jsx:24:        console.error('Health check failed:', error);
src/components/ProviderHealthMonitor.jsx:36:      console.error('Manual health check failed:', error);
src/components/LeadFiveApp.jsx:58:            console.error('Contract initialization failed:', err);
src/components/LeadFiveApp.jsx:121:                console.log('directReferrals function not available or no referrals');
src/components/LeadFiveApp.jsx:128:                console.log('uplineChain function not available');
src/components/LeadFiveApp.jsx:135:                console.log('binaryMatrix function not available');
src/components/LeadFiveApp.jsx:146:            console.error('Failed to fetch user data:', err);
src/components/LeadFiveApp.jsx:185:        console.log(`${type.toUpperCase()}: ${message}`);
src/components/LeadFiveApp.jsx:223:            console.error('Registration failed:', err);
src/components/LeadFiveApp.jsx:239:            console.error('Withdrawal failed:', err);
src/components/LeadFiveApp.jsx:280:            console.error('Package upgrade failed:', err);
src/components/CommunityStructureVisualization.jsx:72:      console.error('Error loading community data:', error);
src/components/EnhancedErrorFeedback.jsx:225:      console.warn(`Max retries (${maxRetries}) reached for error: ${error.message}`);
src/components/EnhancedErrorFeedback.jsx:239:    console.log(`Retrying in ${delay}ms (attempt ${currentAttempts + 1}/${maxRetries})`);
src/components/EnhancedErrorFeedback.jsx:251:        console.error('Retry failed:', retryError);
src/components/EnhancedErrorFeedback.jsx:298:    console.log('Error reported:', errorReport);
src/components/ErrorBoundary.jsx:16:    console.error('ErrorBoundary caught an error:', error, errorInfo);
src/components/ErrorBoundary.jsx:138:    console.error('Captured error:', error);
src/components/SmartInputValidation.jsx:278:        console.error('Validation error:', error);
src/components/RealTimeUpdateManager.jsx:66:      console.warn('WebSocket provider or contract address not available');
src/components/RealTimeUpdateManager.jsx:102:      console.log('‚úÖ WebSocket connected successfully');
src/components/RealTimeUpdateManager.jsx:106:      console.error('‚ùå WebSocket connection failed:', error);
src/components/RealTimeUpdateManager.jsx:244:      console.error('Error processing real-time update:', error);
src/components/RealTimeUpdateManager.jsx:285:      console.log(`üîÑ Attempting WebSocket reconnection (attempt ${connectionStatus.retryCount + 1})`);
src/components/RealTimeUpdateManager.jsx:322:        console.error('Polling error:', error);
src/components/RealTimeUpdateManager.jsx:359:    console.log('‚úÖ Cross-tab synchronization enabled');
src/components/RealTimeUpdateManager.jsx:369:      console.log('üåê Network reconnected, resuming real-time updates');
src/components/RealTimeUpdateManager.jsx:374:        console.log(`üì§ Processing ${updateQueueRef.current.length} queued updates`);
src/components/RealTimeUpdateManager.jsx:379:      console.log('üì± Network disconnected, entering offline mode');
src/components/RealTimeUpdateManager.jsx:444:    console.log('üîÑ Forcing refresh of real-time data');
src/components/WalletConnector.jsx:95:    console.log('üîç Detected wallets:', wallets);
src/components/WalletConnector.jsx:120:      console.log(`üîÑ Wallet detection attempt ${attempts}/${maxAttempts}`);
src/components/WalletConnector.jsx:136:      console.log('üîî Ethereum provider became available, re-detecting...');
src/components/WalletConnector.jsx:159:      console.log('üîÑ Switching to BSC Mainnet...');
src/components/WalletConnector.jsx:164:      console.log('‚úÖ Successfully switched to BSC');
src/components/WalletConnector.jsx:166:      console.log('‚ö†Ô∏è Network switch failed, attempting to add BSC:', switchError.code);
src/components/WalletConnector.jsx:173:          console.log('‚úÖ BSC network added successfully');
src/components/WalletConnector.jsx:175:          console.error('‚ùå Failed to add BSC network:', addError);
src/components/WalletConnector.jsx:185:    console.log('üöÄ ConnectWallet function called with walletId:', walletId);
src/components/WalletConnector.jsx:186:    console.log('üîç Current state - connecting:', connecting, 'selectedWallet:', selectedWallet);
src/components/WalletConnector.jsx:187:    console.log('üîç Available onConnect callback:', !!onConnect);
src/components/WalletConnector.jsx:188:    console.log('üîç Available wallets:', availableWallets.map(w => ({ id: w.id, name: w.name, installed: w.installed })));
src/components/WalletConnector.jsx:195:      console.log(`üîó Attempting to connect ${walletId}...`);
src/components/WalletConnector.jsx:204:        console.log(`üì± Opening download page for ${walletInfo.name}`);
src/components/WalletConnector.jsx:214:      console.log('üìù Requesting account access...');
src/components/WalletConnector.jsx:228:      console.log('‚úÖ Account access granted:', accounts[0]);
src/components/WalletConnector.jsx:238:      console.log('üéâ Wallet connected successfully:', address);
src/components/WalletConnector.jsx:239:      console.log('üìû Calling onConnect callback with data:', { address, walletType: walletId });
src/components/WalletConnector.jsx:251:        console.log('‚úÖ Executing onConnect callback...');
src/components/WalletConnector.jsx:259:        console.warn('‚ö†Ô∏è No onConnect callback provided!');
src/components/WalletConnector.jsx:265:      console.error(`‚ùå Error connecting ${walletId}:`, error);
src/components/WalletConnector.jsx:286:    console.log('üîå Disconnecting wallet...');
src/components/WalletConnector.jsx:295:    console.log('üß™ Testing connection callback...');
src/components/WalletConnector.jsx:297:      console.log('‚úÖ onConnect callback is available');
src/components/WalletConnector.jsx:306:      console.error('‚ùå onConnect callback is not available!');
src/components/WalletConnector.jsx:321:            console.log('üîÑ Attempting auto-reconnect...');
src/components/WalletConnector.jsx:324:              console.log('‚úÖ Auto-reconnect successful');
src/components/WalletConnector.jsx:331:        console.error('‚ùå Auto-reconnect failed:', error);
src/components/WalletConnector.jsx:343:    console.log('üñ±Ô∏è Connect Wallet button clicked - opening modal');
src/components/WalletConnector.jsx:344:    console.log('üîç Current onConnect callback status:', !!onConnect);
src/components/WalletConnector.jsx:345:    console.log('üîç Available wallets:', availableWallets.length);
src/components/WalletConnector.jsx:346:    console.log('üîç Is detecting wallets:', isDetecting);
src/components/NetworkStatus.jsx:43:      console.error('Network check failed:', error);
src/components/NetworkStatus.jsx:86:          console.error('Failed to add BSC network:', addError);
src/components/unified/UnifiedEarningsChart.jsx:34:      console.error('Error loading earnings data:', error);
src/components/NetworkTreeVisualization.examples.jsx:31:          console.log('Node clicked:', node);
src/components/NetworkTreeVisualization.examples.jsx:89:        console.error('Failed to fetch network data:', error);
src/components/NetworkTreeVisualization.examples.jsx:114:          console.log('Live node clicked:', node);
src/components/NetworkTreeVisualization.examples.jsx:118:          console.log('Tree loaded with stats:', stats);
src/components/PWAInstallPrompt.jsx:41:      console.log('User accepted the install prompt');
src/components/PWAInstallPrompt.jsx:44:      console.log('User dismissed the install prompt');
src/components/admin/CompensationPlanUpload.jsx:63:      console.error('File processing error:', error);
src/components/admin/WhitepaperUpload.jsx:79:      console.error('Upload failed:', error);
