// scripts/transfer-ownership.js// Transfer ownership and admin rights to production walletconst { ethers } = require("hardhat");async function main() {  console.log("🔄 Transferring LeadFive Ownership");  console.log("=" .repeat(40));  const PROXY_ADDRESS = process.env.LEADFIVE_PROXY_ADDRESS;  const NEW_OWNER = process.env.PRODUCTION_OWNER_ADDRESS;  if (!PROXY_ADDRESS || !NEW_OWNER) {    throw new Error("Missing LEADFIVE_PROXY_ADDRESS or PRODUCTION_OWNER_ADDRESS in .env");  }  const [deployer] = await ethers.getSigners();  console.log("Current owner:", deployer.address);  console.log("New owner:", NEW_OWNER);  console.log("Contract:", PROXY_ADDRESS);  // Connect to deployed contract  const LeadFive = await ethers.getContractFactory("LeadFive");  const leadFive = LeadFive.attach(PROXY_ADDRESS);  // Verify current ownership  const currentOwner = await leadFive.owner();  if (currentOwner !== deployer.address) {    throw new Error(`Current owner ${currentOwner} doesn't match deployer ${deployer.address}`);  }  try {    // Add new owner as admin first    console.log("\n1️⃣ Adding new owner as admin...");    const addAdminTx = await leadFive.addAdmin(NEW_OWNER);    await addAdminTx.wait();    console.log("✅ New owner added as admin");    // Transfer ownership    console.log("\n2️⃣ Transferring ownership...");    const transferTx = await leadFive.transferOwnership(NEW_OWNER);    await transferTx.wait();    console.log("✅ Ownership transferred");    // Verify new ownership    const newOwner = await leadFive.owner();    console.log("\n✅ Transfer completed!");    console.log("New owner:", newOwner);    console.log("Transfer successful:", newOwner === NEW_OWNER);  } catch (error) {    console.error("❌ Transfer failed:", error.message);    process.exit(1);  }}main()  .then(() => process.exit(0))  .catch((error) => {    console.error("❌ Script failed:", error);    process.exit(1);  });