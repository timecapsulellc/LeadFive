const fs = require('fs');

console.log('\n' + '='.repeat(80));
console.log('üîê TREZOR SUITE WEB DEPLOYMENT INSTRUCTIONS');
console.log('='.repeat(80));

const TREZOR_ADDRESS = '0xDf628ed21f0B27197Ad02fc29EbF4417C04c4D29';
const USDT_TESTNET = '0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684';

console.log('\nüìã DEPLOYMENT CONFIGURATION:');
console.log(`   ‚Ä¢ Contract: OrphiCrowdFund`);
console.log(`   ‚Ä¢ Network: BSC Testnet (Chain ID: 97)`);
console.log(`   ‚Ä¢ Trezor Address: ${TREZOR_ADDRESS}`);
console.log(`   ‚Ä¢ USDT Token: ${USDT_TESTNET}`);
console.log(`   ‚Ä¢ All Admin Roles: Assigned to Trezor`);

console.log('\nüöÄ TREZOR SUITE WEB DEPLOYMENT STEPS:');
console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');

console.log('\n1. üåê OPEN TREZOR SUITE WEB:');
console.log('   https://suite.trezor.io/web/');

console.log('\n2. üîå CONNECT YOUR TREZOR:');
console.log('   ‚Ä¢ Connect device via USB');
console.log('   ‚Ä¢ Unlock with PIN');
console.log('   ‚Ä¢ Allow Suite Web to connect');

console.log('\n3. ‚öôÔ∏è ADD BSC TESTNET NETWORK:');
console.log('   ‚Ä¢ Go to Settings ‚Üí Coins ‚Üí Add Network');
console.log('   ‚Ä¢ Add custom network:');
console.log('     - Name: BSC Testnet');
console.log('     - RPC URL: https://data-seed-prebsc-1-s1.binance.org:8545/');
console.log('     - Chain ID: 97');
console.log('     - Symbol: BNB');
console.log('     - Explorer: https://testnet.bscscan.com');

console.log('\n4. üìç VERIFY YOUR ADDRESS:');
console.log(`   Expected: ${TREZOR_ADDRESS}`);
console.log('   Confirm this matches in Trezor Suite Web');

console.log('\n5. üí∞ CHECK BALANCE:');
console.log('   ‚Ä¢ You have 0.1 test BNB (sufficient for deployment)');
console.log('   ‚Ä¢ If needed, get more from: https://testnet.binance.org/faucet-smart');

console.log('\n6. üöÄ DEPLOY CONTRACT:');
console.log('   OPTION A - Use Trezor Suite Web Apps:');
console.log('   ‚Ä¢ Look for "Apps" or "DeFi" section');
console.log('   ‚Ä¢ Find smart contract deployment tools');
console.log('   ‚Ä¢ Deploy OrphiCrowdFund contract');
console.log('');
console.log('   OPTION B - Manual Transaction:');
console.log('   ‚Ä¢ Go to "Send" section');
console.log('   ‚Ä¢ Advanced/Raw transaction mode');
console.log('   ‚Ä¢ Create contract deployment transaction');

console.log('\n7. ‚ö° INITIALIZE CONTRACT:');
console.log('   After deployment, call initialize() with:');
console.log(`   ‚Ä¢ _usdtToken: ${USDT_TESTNET}`);
console.log(`   ‚Ä¢ _treasuryAddress: ${TREZOR_ADDRESS}`);
console.log(`   ‚Ä¢ _emergencyAddress: ${TREZOR_ADDRESS}`);
console.log(`   ‚Ä¢ _poolManagerAddress: ${TREZOR_ADDRESS}`);

console.log('\n8. ‚úÖ VERIFY DEPLOYMENT:');
console.log('   ‚Ä¢ Check contract on: https://testnet.bscscan.com');
console.log('   ‚Ä¢ Verify admin roles assigned to your Trezor');

console.log('\nüîó USEFUL LINKS:');
console.log(`   ‚Ä¢ Trezor Suite Web: https://suite.trezor.io/web/`);
console.log(`   ‚Ä¢ Your Explorer: https://testnet.bscscan.com/address/${TREZOR_ADDRESS}`);
console.log(`   ‚Ä¢ BSC Testnet Faucet: https://testnet.binance.org/faucet-smart`);

console.log('\nüõ°Ô∏è SECURITY REMINDERS:');
console.log('   ‚Ä¢ Only use https://suite.trezor.io/web/');
console.log('   ‚Ä¢ Verify all transaction details on Trezor screen');
console.log('   ‚Ä¢ Your private keys never leave the hardware device');
console.log('   ‚Ä¢ All admin functions will require Trezor confirmation');

console.log('\n‚úÖ YOU ARE READY TO DEPLOY!');
console.log('   Open Trezor Suite Web and follow the steps above');

// Check if contract artifacts exist
const contractPath = './artifacts/contracts/OrphiCrowdFund.sol/OrphiCrowdFund.json';
if (fs.existsSync(contractPath)) {
    const contractArtifact = JSON.parse(fs.readFileSync(contractPath, 'utf8'));
    console.log('\nüìÑ CONTRACT DATA AVAILABLE:');
    console.log(`   ‚Ä¢ Bytecode length: ${contractArtifact.bytecode.length} characters`);
    console.log(`   ‚Ä¢ ABI functions: ${contractArtifact.abi.length} entries`);
    console.log('   ‚Ä¢ Ready for deployment via Trezor Suite Web');
} else {
    console.log('\n‚ö†Ô∏è Contract needs compilation first:');
    console.log('   Run: npx hardhat compile');
}

console.log('\nüéØ NEXT ACTION: Open https://suite.trezor.io/web/ and begin deployment!');
