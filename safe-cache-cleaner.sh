#!/bin/zsh

# ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
# ‚ïë                    üßπ SAFE CACHE CLEANER (DEPLOYMENT FRIENDLY) üßπ                    ‚ïë
# ‚ïë                                                                                       ‚ïë
# ‚ïë  Clears only safe-to-remove cache files, preserves deployment-critical files         ‚ïë
# ‚ïë                                                                                       ‚ïë
# ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${PURPLE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${PURPLE}‚ïë                    üßπ SAFE CACHE CLEANER (DEPLOYMENT FRIENDLY) üßπ                    ‚ïë${NC}"
echo -e "${PURPLE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo

echo -e "${CYAN}üìÇ Cleaning safe cache files in: $(pwd)${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  Preserving deployment-critical files (artifacts, node_modules)${NC}"
echo

# Function to safely remove files/directories
safe_remove() {
    local path="$1"
    local description="$2"
    
    if [[ -e "$path" ]]; then
        echo -e "${YELLOW}üóëÔ∏è  Removing $description...${NC}"
        rm -rf "$path"
        echo -e "${GREEN}‚úÖ Removed: $path${NC}"
    else
        echo -e "${CYAN}‚ÑπÔ∏è  Not found: $description${NC}"
    fi
}

# 1. Safe temporary files
echo -e "${BLUE}‚ïê‚ïê‚ïê Temporary Files (Safe) ‚ïê‚ïê‚ïê${NC}"
safe_remove "tmp" "Temporary folder"
safe_remove ".tmp" "Hidden temporary folder"
find . -name "*.tmp" -delete 2>/dev/null || true
find . -name "*.temp" -delete 2>/dev/null || true
find . -name ".DS_Store" -delete 2>/dev/null || true

# 2. Log files
echo -e "${BLUE}‚ïê‚ïê‚ïê Log Files ‚ïê‚ïê‚ïê${NC}"
find . -name "*.log" -not -path "./node_modules/*" -delete 2>/dev/null || true
safe_remove "logs" "Logs folder"

# 3. Test artifacts (safe to regenerate)
echo -e "${BLUE}‚ïê‚ïê‚ïê Test Artifacts ‚ïê‚ïê‚ïê${NC}"
safe_remove "coverage" "Test coverage reports"
safe_remove ".nyc_output" "NYC test output"
safe_remove "test-results" "Test results"

# 4. Editor caches
echo -e "${BLUE}‚ïê‚ïê‚ïê Editor Caches ‚ïê‚ïê‚ïê${NC}"
find . -name "*.swp" -delete 2>/dev/null || true
find . -name "*.swo" -delete 2>/dev/null || true
find . -name "*~" -delete 2>/dev/null || true

# 5. OS-specific files
echo -e "${BLUE}‚ïê‚ïê‚ïê OS-Specific Files ‚ïê‚ïê‚ïê${NC}"
find . -name "Thumbs.db" -delete 2>/dev/null || true
find . -name "ehthumbs.db" -delete 2>/dev/null || true
find . -name "Desktop.ini" -delete 2>/dev/null || true

# 6. Git cleanup (safe)
echo -e "${BLUE}‚ïê‚ïê‚ïê Git Cleanup ‚ïê‚ïê‚ïê${NC}"
if [[ -d ".git" ]]; then
    echo -e "${YELLOW}üßπ Cleaning Git cache...${NC}"
    git gc --prune=now 2>/dev/null || echo -e "${YELLOW}‚ö†Ô∏è  Git cleanup skipped${NC}"
    echo -e "${GREEN}‚úÖ Git cleanup completed${NC}"
fi

echo
echo -e "${GREEN}‚úÖ Safe cache cleanup completed!${NC}"
echo
echo -e "${CYAN}üìä What was cleaned:${NC}"
echo -e "   ‚Ä¢ Temporary files and logs"
echo -e "   ‚Ä¢ Test coverage reports"
echo -e "   ‚Ä¢ Editor swap files"
echo -e "   ‚Ä¢ OS-specific cache files"
echo -e "   ‚Ä¢ Git garbage collection"
echo
echo -e "${GREEN}‚úÖ What was preserved:${NC}"
echo -e "   ‚Ä¢ Contract artifacts (needed for deployment)"
echo -e "   ‚Ä¢ Node modules (needed for TrezorConnect)"
echo -e "   ‚Ä¢ Hardhat cache (speeds up compilation)"
echo -e "   ‚Ä¢ All source code and configurations"
echo
echo -e "${PURPLE}üéâ Your deployment is safe to continue!${NC}"
echo
